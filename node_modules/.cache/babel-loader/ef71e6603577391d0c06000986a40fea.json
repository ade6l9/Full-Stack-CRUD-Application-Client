{"ast":null,"code":"var _jsxFileName = \"/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/containers/StudentContainer.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// /*==================================================\n// StudentContainer.js\n\n// The Container component is responsible for stateful logic and data fetching, and\n// passes data (if any) as props to the corresponding View component.\n// If needed, it also defines the component's \"connect\" function.\n// ================================================== */\n\n// import Header from './Header';\n// import React, { useEffect } from 'react';\n// import { connect } from 'react-redux';\n// import { useParams, withRouter } from 'react-router-dom';\n// import StudentView from '../views/StudentView';\n// import { \n//   fetchStudentThunk, \n//   fetchCampusThunk,\n//   deleteStudentThunk \n// } from \"../../store/thunks\";\n\n// const StudentContainer = ({\n//   student, \n//   campus, \n//   fetchStudent, \n//   fetchCampus,\n//   deleteStudent,\n//   history\n// }) => {\n//   const { id } = useParams();\n\n//   // Debug to ensure id is correct\n//   console.log('StudentContainer: useParams id:', id);\n\n//   useEffect(() => {\n//     fetchStudent(id);\n//   }, [id, fetchStudent]);\n\n//   useEffect(() => {\n//     if (student?.campusId) {\n//       fetchCampus(student.campusId);\n//     }\n//   }, [student, fetchCampus]);\n\n//   console.log('StudentContainer: student prop:', student);\n//   console.log('StudentContainer: campus prop:', campus);\n\n//   if (!student) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       {/* Include the shared Header */}\n//       <Header />\n\n//       {/* Render the StudentView component */}\n//       <StudentView\n//         student={student}\n//         campus={campus}\n//         onDeleteStudent={(id) => {\n//           deleteStudent(id);\n//           history.push(\"/students\"); // Redirect to the students list\n//         }}\n//       />\n//     </div>\n//   );\n// };\n\n// const mapStateToProps = (state) => ({\n//   student: state.student || null, // Ensure reducer state is mapped correctly\n//   campus: state.campus?.selectedCampus || null, // Ensure reducer state is mapped correctly\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n//   fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n//   deleteStudent: (id) => dispatch(deleteStudentThunk(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(withRouter(StudentContainer));\n\nimport Header from './Header';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport StudentView from '../views/StudentView';\nimport { fetchStudentThunk, fetchCampusThunk, deleteStudentThunk } from \"../../store/thunks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentContainer = ({\n  student,\n  campus,\n  fetchStudent,\n  fetchCampus,\n  deleteStudent\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchStudent(id);\n  }, [id, fetchStudent]);\n  useEffect(() => {\n    if (student && student.campusId) {\n      fetchCampus(student.campusId);\n    }\n  }, [student, fetchCampus]);\n  if (!student) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading student data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StudentView, {\n      student: student,\n      campus: campus,\n      onDeleteStudent: id => {\n        deleteStudent(id);\n        navigate(\"/students\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentContainer, \"cyIY5lIMrRUwNnEXQgknmHxA9T8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = StudentContainer;\nconst mapStateToProps = state => {\n  var _state$student, _state$campus;\n  return {\n    student: ((_state$student = state.student) === null || _state$student === void 0 ? void 0 : _state$student.selectedStudent) || null,\n    // Adjust if needed\n    campus: ((_state$campus = state.campus) === null || _state$campus === void 0 ? void 0 : _state$campus.selectedCampus) || null\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  _s2();\n  return {\n    fetchStudent: React.useCallback(id => dispatch(fetchStudentThunk(id)), [dispatch]),\n    fetchCampus: React.useCallback(id => dispatch(fetchCampusThunk(id)), [dispatch]),\n    deleteStudent: React.useCallback(id => dispatch(deleteStudentThunk(id)), [dispatch])\n  };\n};\n_s2(mapDispatchToProps, \"w3HRFO/lqKm8NQEe8oCDNtMnnVg=\");\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentContainer);\nvar _c;\n$RefreshReg$(_c, \"StudentContainer\");","map":{"version":3,"names":["Header","React","useEffect","connect","useParams","useNavigate","StudentView","fetchStudentThunk","fetchCampusThunk","deleteStudentThunk","jsxDEV","_jsxDEV","StudentContainer","student","campus","fetchStudent","fetchCampus","deleteStudent","_s","id","navigate","campusId","children","fileName","_jsxFileName","lineNumber","columnNumber","onDeleteStudent","_c","mapStateToProps","state","_state$student","_state$campus","selectedStudent","selectedCampus","mapDispatchToProps","dispatch","_s2","useCallback","$RefreshReg$"],"sources":["/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/containers/StudentContainer.js"],"sourcesContent":["// /*==================================================\n// StudentContainer.js\n\n// The Container component is responsible for stateful logic and data fetching, and\n// passes data (if any) as props to the corresponding View component.\n// If needed, it also defines the component's \"connect\" function.\n// ================================================== */\n\n// import Header from './Header';\n// import React, { useEffect } from 'react';\n// import { connect } from 'react-redux';\n// import { useParams, withRouter } from 'react-router-dom';\n// import StudentView from '../views/StudentView';\n// import { \n//   fetchStudentThunk, \n//   fetchCampusThunk,\n//   deleteStudentThunk \n// } from \"../../store/thunks\";\n\n// const StudentContainer = ({\n//   student, \n//   campus, \n//   fetchStudent, \n//   fetchCampus,\n//   deleteStudent,\n//   history\n// }) => {\n//   const { id } = useParams();\n\n//   // Debug to ensure id is correct\n//   console.log('StudentContainer: useParams id:', id);\n\n//   useEffect(() => {\n//     fetchStudent(id);\n//   }, [id, fetchStudent]);\n\n//   useEffect(() => {\n//     if (student?.campusId) {\n//       fetchCampus(student.campusId);\n//     }\n//   }, [student, fetchCampus]);\n\n//   console.log('StudentContainer: student prop:', student);\n//   console.log('StudentContainer: campus prop:', campus);\n\n//   if (!student) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       {/* Include the shared Header */}\n//       <Header />\n\n//       {/* Render the StudentView component */}\n//       <StudentView\n//         student={student}\n//         campus={campus}\n//         onDeleteStudent={(id) => {\n//           deleteStudent(id);\n//           history.push(\"/students\"); // Redirect to the students list\n//         }}\n//       />\n//     </div>\n//   );\n// };\n\n// const mapStateToProps = (state) => ({\n//   student: state.student || null, // Ensure reducer state is mapped correctly\n//   campus: state.campus?.selectedCampus || null, // Ensure reducer state is mapped correctly\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n//   fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n//   deleteStudent: (id) => dispatch(deleteStudentThunk(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(withRouter(StudentContainer));\n\n\n\n\nimport Header from './Header';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport StudentView from '../views/StudentView';\nimport { fetchStudentThunk, fetchCampusThunk, deleteStudentThunk } from \"../../store/thunks\";\n\nconst StudentContainer = ({ student, campus, fetchStudent, fetchCampus, deleteStudent }) => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchStudent(id);\n  }, [id, fetchStudent]);\n\n  useEffect(() => {\n    if (student && student.campusId) {\n      fetchCampus(student.campusId);\n    }\n  }, [student, fetchCampus]);\n\n  if (!student) {\n    return <div>Loading student data...</div>;\n  }\n\n  return (\n    <div>\n      <Header />\n      <StudentView\n        student={student}\n        campus={campus}\n        onDeleteStudent={(id) => {\n          deleteStudent(id);\n          navigate(\"/students\");\n        }}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  student: state.student?.selectedStudent || null, // Adjust if needed\n  campus: state.campus?.selectedCampus || null,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchStudent: React.useCallback((id) => dispatch(fetchStudentThunk(id)), [dispatch]),\n  fetchCampus: React.useCallback((id) => dispatch(fetchCampusThunk(id)), [dispatch]),\n  deleteStudent: React.useCallback((id) => dispatch(deleteStudentThunk(id)), [dispatch]),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentContainer);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
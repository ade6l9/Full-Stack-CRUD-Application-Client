{"ast":null,"code":"// /*==================================================\n// /src/store/reducers/student.js\n\n// This is a Reducer function that accepts 2 parameters: the previous state object (aka current state) and an action object. \n// Depending on the Action object, the Reducer updates the State and return the new State object.\n// It also defines the State and its default initial value.\n// ================================================== */\n// import { FETCH_STUDENT } from \"../actions/actionTypes\";  // Import Action Type\nimport * as at from \"../actions/actionTypes\";\n// REDUCER:\nconst initialState = null;\nconst student = (state = initialState, action) => {\n  switch (action.type) {\n    case at.FETCH_STUDENT:\n      console.log('FETCH_STUDENT action payload:', action.payload); // Debug log\n      return action.payload;\n    // Update state with the fetched student\n    default:\n      return state;\n  }\n};\nexport default student;","map":{"version":3,"names":["at","initialState","student","state","action","type","FETCH_STUDENT","console","log","payload"],"sources":["/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/store/reducers/student.js"],"sourcesContent":["// /*==================================================\n// /src/store/reducers/student.js\n\n// This is a Reducer function that accepts 2 parameters: the previous state object (aka current state) and an action object. \n// Depending on the Action object, the Reducer updates the State and return the new State object.\n// It also defines the State and its default initial value.\n// ================================================== */\n// import { FETCH_STUDENT } from \"../actions/actionTypes\";  // Import Action Type\nimport * as at from \"../actions/actionTypes\"; \n// REDUCER:\nconst initialState = null;\n\nconst student = (state = initialState, action) => {\n  switch (action.type) {\n    case at.FETCH_STUDENT:\n      console.log('FETCH_STUDENT action payload:', action.payload); // Debug log\n      return action.payload; // Update state with the fetched student\n    default:\n      return state;\n  }\n};\n\nexport default student;\n\n\n\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,EAAE,MAAM,wBAAwB;AAC5C;AACA,MAAMC,YAAY,GAAG,IAAI;AAEzB,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGF,YAAY,EAAEG,MAAM,KAAK;EAChD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKL,EAAE,CAACM,aAAa;MACnBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEJ,MAAM,CAACK,OAAO,CAAC,CAAC,CAAC;MAC9D,OAAOL,MAAM,CAACK,OAAO;IAAE;IACzB;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}
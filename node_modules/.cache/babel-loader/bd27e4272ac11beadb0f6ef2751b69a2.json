{"ast":null,"code":"var _jsxFileName = \"/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/views/StudentView.js\",\n  _s = $RefreshSig$();\n/*==================================================\nStudentView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display the single student view page.\n================================================== */\n// StudentView.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentView = props => {\n  _s();\n  console.log('StudentView props:', props); // Debug log\n\n  const {\n    student\n  } = props;\n  const [campuses, setCampuses] = useState([]); // List of all campuses\n  const [selectedCampusId, setSelectedCampusId] = useState(\"\"); // Store selected campus ID (initialized as empty string)\n  const [isCampusDropdownVisible, setIsCampusDropdownVisible] = useState(false); // Track if the dropdown is visible\n  const [success, setSuccess] = useState(\"\"); // Track success messages\n  const [error, setError] = useState(\"\"); // Track error messages\n\n  // Fetch all campuses when the component is mounted\n  useEffect(() => {\n    const fetchCampuses = async () => {\n      try {\n        const response = await axios.get(\"/api/campuses\");\n        setCampuses(response.data);\n      } catch (error) {\n        console.error(\"Error fetching campuses:\", error);\n        setError(\"Failed to fetch campuses.\");\n      }\n    };\n    fetchCampuses();\n  }, []);\n\n  // Handle removing student from campus and refreshing the page\n  const handleRemoveFromCampus = async () => {\n    const confirmation = window.confirm(\"Are you sure you want to remove this student from this campus?\");\n    if (confirmation) {\n      try {\n        // Send the request to remove the student from campus\n        await axios.put(`/api/students/${student.id}/`, {\n          campusId: null // Set campusId to null to remove the student from the campus\n        });\n        setSuccess(\"Student removed from campus successfully!\"); // Update success message\n        //window.location.reload(); // Reload to reflect the changes\n        props.fetchStudent(student.id); // Refetch the student to get the updated data\n      } catch (error) {\n        console.error(\"Error removing student from campus:\", error);\n        setError(\"An error occurred while removing the student from campus.\"); // Update error message\n      }\n    }\n  };\n\n  // Handle adding a student to a campus\n  const handleAddCampus = () => {\n    if (student.campusId) {\n      setError(\"Campus can't be added, student is already enrolled.\"); // Show error if already enrolled\n    } else {\n      setIsCampusDropdownVisible(true); // Show the dropdown if the student doesn't have a campus\n    }\n  };\n\n  // Handle selecting a campus from the dropdown\n  const handleCampusSelect = event => {\n    setSelectedCampusId(event.target.value);\n  };\n\n  // Handle adding the student to the selected campus\n  const handleAddCampusToStudent = async () => {\n    if (!selectedCampusId) {\n      setError(\"Please select a campus.\"); // Show error if no campus selected\n      return;\n    }\n    try {\n      // Send a request to update the student's campusId\n      await axios.put(`/api/students/${student.id}/`, {\n        campusId: selectedCampusId\n      });\n      setSuccess(\"Student successfully added to the campus!\"); // Show success message\n      //window.location.reload(); // Refresh the page after adding the campus\n      props.fetchStudent(student.id); // Refetch the student to get the updated data\n      setIsCampusDropdownVisible(false); // Hide the dropdown\n      setSelectedCampusId(\"\"); // Clear selected campus\n    } catch (error) {\n      console.error(\"Error adding student to campus:\", error);\n      setError(\"An error occurred while adding the student to campus.\"); // Show error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: `${student.firstname} ${student.lastname}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", student.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"GPA: \", student.gpa || \"N/A\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: student.imageurl || \"https://via.placeholder.com/150\",\n      alt: `${student.firstname} ${student.lastname}`,\n      style: {\n        width: \"300px\",\n        height: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enrolled Campus:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), student.campus ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/campus/${student.campus.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: student.campus.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: student.campus.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRemoveFromCampus,\n        children: \"Remove from Campus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Student not enrolled in any campus.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddCampus,\n      children: \"Add Campus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), isCampusDropdownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select a Campus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleCampusSelect,\n        value: selectedCampusId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a campus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), campuses.map(campus => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: campus.id,\n          children: campus.name\n        }, campus.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCampusToStudent,\n        children: \"Add to Campus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/editstudent/${student.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Edit Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentView, \"CUpjfOptPTgGNZfv/hKUSqINGMw=\");\n_c = StudentView;\nexport default StudentView;\nvar _c;\n$RefreshReg$(_c, \"StudentView\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","jsxDEV","_jsxDEV","StudentView","props","_s","console","log","student","campuses","setCampuses","selectedCampusId","setSelectedCampusId","isCampusDropdownVisible","setIsCampusDropdownVisible","success","setSuccess","error","setError","fetchCampuses","response","get","data","handleRemoveFromCampus","confirmation","window","confirm","put","id","campusId","fetchStudent","handleAddCampus","handleCampusSelect","event","target","value","handleAddCampusToStudent","children","firstname","lastname","fileName","_jsxFileName","lineNumber","columnNumber","email","gpa","src","imageurl","alt","style","width","height","campus","to","name","address","onClick","color","onChange","map","_c","$RefreshReg$"],"sources":["/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/views/StudentView.js"],"sourcesContent":["/*==================================================\nStudentView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display the single student view page.\n================================================== */\n// StudentView.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst StudentView = (props) => {\n  console.log('StudentView props:', props); // Debug log\n\n  const { student } = props;\n  const [campuses, setCampuses] = useState([]); // List of all campuses\n  const [selectedCampusId, setSelectedCampusId] = useState(\"\"); // Store selected campus ID (initialized as empty string)\n  const [isCampusDropdownVisible, setIsCampusDropdownVisible] = useState(false); // Track if the dropdown is visible\n  const [success, setSuccess] = useState(\"\"); // Track success messages\n  const [error, setError] = useState(\"\"); // Track error messages\n\n  // Fetch all campuses when the component is mounted\n  useEffect(() => {\n    const fetchCampuses = async () => {\n      try {\n        const response = await axios.get(\"/api/campuses\");\n        setCampuses(response.data);\n      } catch (error) {\n        console.error(\"Error fetching campuses:\", error);\n        setError(\"Failed to fetch campuses.\");\n      }\n    };\n    fetchCampuses();\n  }, []);\n\n  // Handle removing student from campus and refreshing the page\n  const handleRemoveFromCampus = async () => {\n    const confirmation = window.confirm(\n      \"Are you sure you want to remove this student from this campus?\"\n    );\n    if (confirmation) {\n      try {\n        // Send the request to remove the student from campus\n        await axios.put(`/api/students/${student.id}/`, {\n          campusId: null, // Set campusId to null to remove the student from the campus\n        });\n\n        setSuccess(\"Student removed from campus successfully!\"); // Update success message\n        //window.location.reload(); // Reload to reflect the changes\n        props.fetchStudent(student.id); // Refetch the student to get the updated data\n      } catch (error) {\n        console.error(\"Error removing student from campus:\", error);\n        setError(\"An error occurred while removing the student from campus.\"); // Update error message\n      }\n    }\n  };\n\n  // Handle adding a student to a campus\n  const handleAddCampus = () => {\n    if (student.campusId) {\n      setError(\"Campus can't be added, student is already enrolled.\"); // Show error if already enrolled\n    } else {\n      setIsCampusDropdownVisible(true); // Show the dropdown if the student doesn't have a campus\n    }\n  };\n\n  // Handle selecting a campus from the dropdown\n  const handleCampusSelect = (event) => {\n    setSelectedCampusId(event.target.value);\n  };\n\n  // Handle adding the student to the selected campus\n  const handleAddCampusToStudent = async () => {\n    if (!selectedCampusId) {\n      setError(\"Please select a campus.\"); // Show error if no campus selected\n      return;\n    }\n\n    try {\n      // Send a request to update the student's campusId\n      await axios.put(`/api/students/${student.id}/`, {\n        campusId: selectedCampusId,\n      });\n\n      setSuccess(\"Student successfully added to the campus!\"); // Show success message\n      //window.location.reload(); // Refresh the page after adding the campus\n      props.fetchStudent(student.id); // Refetch the student to get the updated data\n      setIsCampusDropdownVisible(false); // Hide the dropdown\n    setSelectedCampusId(\"\"); // Clear selected campus\n    } catch (error) {\n      console.error(\"Error adding student to campus:\", error);\n      setError(\"An error occurred while adding the student to campus.\"); // Show error message\n    }\n  };\n\n  return (\n    <div>\n      <h1>{`${student.firstname} ${student.lastname}`}</h1>\n      <p>Email: {student.email}</p>\n      <p>GPA: {student.gpa || \"N/A\"}</p>\n      <img\n        src={student.imageurl || \"https://via.placeholder.com/150\"}\n        alt={`${student.firstname} ${student.lastname}`}\n        style={{ width: \"300px\", height: \"auto\" }}\n      />\n      <br />\n\n      <h2>Enrolled Campus:</h2>\n      {student.campus ? (\n        <div>\n          <Link to={`/campus/${student.campus.id}`}>\n            <h3>{student.campus.name}</h3>\n          </Link>\n          <p>{student.campus.address}</p>\n          <button onClick={handleRemoveFromCampus}>Remove from Campus</button>\n        </div>\n      ) : (\n        <p>Student not enrolled in any campus.</p>\n      )}\n\n      <br />\n      {/* Display success or error messages dynamically */}\n      {success && <p style={{ color: \"green\" }}>{success}</p>}\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      <br />\n\n      {/* \"Add Campus\" Button */}\n      <button onClick={handleAddCampus}>\n        Add Campus\n      </button>\n\n      {/* Dropdown for selecting a campus */}\n      {isCampusDropdownVisible && (\n        <div>\n          <h3>Select a Campus</h3>\n          <select onChange={handleCampusSelect} value={selectedCampusId}>\n            <option value=\"\">Select a campus</option>\n            {campuses.map((campus) => (\n              <option key={campus.id} value={campus.id}>\n                {campus.name}\n              </option>\n            ))}\n          </select>\n          <button onClick={handleAddCampusToStudent}>Add to Campus</button>\n        </div>\n      )}\n\n      <br />\n      <Link to={`/editstudent/${student.id}`}>\n  <button>Edit Student</button>\n</Link>\n\n    </div>\n  );\n};\n\nexport default StudentView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
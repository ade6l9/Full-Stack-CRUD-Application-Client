{"ast":null,"code":"var _jsxFileName = \"/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/views/CampusView.js\",\n  _s = $RefreshSig$();\n/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\n\n// import { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { addStudentThunk } from \"../../store/thunks\";\n// import { removeStudentFromCampusThunk } from \"../../store/thunks\";\n\n// const CampusView = (props) => {\n//   const {\n//     campus,\n//     deleteStudent,\n//     allStudents,\n//     updateStudent,\n//   } = props;\n\n//   // Track whether to show the forms\n//   const [showNewStudentForm, setShowNewStudentForm] = useState(false);\n//   const [showExistingStudentForm, setShowExistingStudentForm] = useState(false);\n\n//   // Handle new student form state\n//   const [newStudent, setNewStudent] = useState({\n//     firstname: \"\",\n//     lastname: \"\",\n//     email: \"\",\n//     gpa: \"\",\n//     campusId: campus.id,\n//   });\n\n//   const [selectedStudent, setSelectedStudent] = useState(\"\");\n\n//   // // Handle new student form submission\n//   // const handleNewStudentSubmit = (e) => {\n//   //   e.preventDefault();\n//   //   createStudent(newStudent);\n//   //   setNewStudent({ firstname: \"\", lastname: \"\", email: \"\", gpa: \"\", campusId: campus.id });\n//   //   setShowNewStudentForm(false); // Hide the form after submission\n//   // };\n//    // Handle new student form submission\n//    const handleNewStudentSubmit = async (e) => {\n//     e.preventDefault();\n//     const addedStudent = await addStudentThunk(newStudent); // Call the thunk\n//     if (addedStudent) {\n//       setNewStudent({ firstname: \"\", lastname: \"\", email: \"\", gpa: \"\", campusId: campus.id });\n//       setShowNewStudentForm(false); // Hide the form\n//     }\n//   };\n\n//   // Handle adding existing student\n//   const handleAddExistingStudent = (e) => {\n//     e.preventDefault();\n//     if (selectedStudent) {\n//       updateStudent(selectedStudent, { campusId: campus.id });\n//       setSelectedStudent(\"\");\n//       setShowExistingStudentForm(false); // Hide the form after submission\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>{campus.name}</h1>\n//       <p>{campus.address}</p>\n//       <p>{campus.description}</p>\n//       <img\n//         src={campus.imageUrl || \"https://via.placeholder.com/150\"}\n//         alt={`${campus.name} campus`}\n//         style={{ width: \"300px\", height: \"auto\" }}\n//       />\n//       <br />\n\n//       <h2>Enrolled Students:</h2>\n//       {campus.students && campus.students.length > 0 ? (\n//   campus.students.map((student) => (\n//     <div key={student.id}>\n//       <Link to={`/student/${student.id}`}>\n//         <h3>{`${student.firstname} ${student.lastname}`}</h3>\n//       </Link>\n//       <button onClick={() => deleteStudent(student.id, campus.id)}>\n//         Remove Student\n//       </button>\n\n//     </div>\n//   ))\n// ) : (\n//   <p>No students are currently enrolled at this campus.</p>\n// )}\n\n//       <br />\n\n//       {/* Buttons to trigger the forms */}\n//       <button onClick={() => setShowNewStudentForm(!showNewStudentForm)}>\n//         {showNewStudentForm ? \"Cancel Add New Student\" : \"Add New Student\"}\n//       </button>\n//       <br />\n//       <button onClick={() => setShowExistingStudentForm(!showExistingStudentForm)}>\n//         {showExistingStudentForm ? \"Cancel Add Existing Student\" : \"Add Existing Student\"}\n//       </button>\n\n//       {/* New Student Form */}\n//       {showNewStudentForm && (\n//         <form onSubmit={handleNewStudentSubmit}>\n//           <h2>Add New Student</h2>\n//           <label>\n//             First Name:\n//             <input\n//               type=\"text\"\n//               value={newStudent.firstname}\n//               onChange={(e) => setNewStudent({ ...newStudent, firstname: e.target.value })}\n//               required\n//             />\n//           </label>\n//           <br />\n//           <label>\n//             Last Name:\n//             <input\n//               type=\"text\"\n//               value={newStudent.lastname}\n//               onChange={(e) => setNewStudent({ ...newStudent, lastname: e.target.value })}\n//               required\n//             />\n//           </label>\n//           <br />\n//           <label>\n//             Email:\n//             <input\n//               type=\"email\"\n//               value={newStudent.email}\n//               onChange={(e) => setNewStudent({ ...newStudent, email: e.target.value })}\n//               required\n//             />\n//           </label>\n//           <br />\n//           <label>\n//             GPA:\n//             <input\n//               type=\"number\"\n//               step=\"0.01\"\n//               value={newStudent.gpa}\n//               onChange={(e) => setNewStudent({ ...newStudent, gpa: e.target.value })}\n//             />\n//           </label>\n//           <br />\n//           <button type=\"submit\">Add Student</button>\n//         </form>\n//       )}\n\n//       {/* Existing Student Dropdown */}\n//       {showExistingStudentForm && (\n//         <form onSubmit={handleAddExistingStudent}>\n//           <h2>Add Existing Student</h2>\n//           <label>\n//             Select Student:\n//             <select\n//               value={selectedStudent}\n//               onChange={(e) => setSelectedStudent(e.target.value)}\n//               required\n//             >\n//               <option value=\"\">-- Select a Student --</option>\n//               {allStudents &&\n//                 allStudents\n//                   .filter((student) => !student.campusId) // Only show students not already enrolled\n//                   .map((student) => (\n//                     <option key={student.id} value={student.id}>\n//                       {`${student.firstname} ${student.lastname}`}\n//                     </option>\n//                   ))}\n//             </select>\n//           </label>\n//           <br />\n//           <button type=\"submit\">Add to Campus</button>\n//         </form>\n//       )}\n\n//       <br />\n//       <Link to={`/editcampus/${campus.id}`}>\n//         <button>Edit Campus</button>\n//       </Link>\n//     </div>\n//   );\n// };\n\n// export default CampusView;\n\n/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\n\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { addStudentThunk, removeStudentFromCampusThunk } from \"../../store/thunks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampusView = props => {\n  _s();\n  const {\n    campus,\n    allStudents,\n    updateStudent,\n    removeStudentFromCampus // Updated: Pass removeStudentFromCampusThunk as a prop\n  } = props;\n\n  // Track whether to show the forms\n  const [showNewStudentForm, setShowNewStudentForm] = useState(false);\n  const [showExistingStudentForm, setShowExistingStudentForm] = useState(false);\n\n  // Handle new student form state\n  const [newStudent, setNewStudent] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    gpa: \"\",\n    campusId: campus.id\n  });\n  const [selectedStudent, setSelectedStudent] = useState(\"\");\n\n  // Handle new student form submission\n  const handleNewStudentSubmit = async e => {\n    e.preventDefault();\n    const addedStudent = await addStudentThunk(newStudent); // Call the thunk\n    if (addedStudent) {\n      setNewStudent({\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        gpa: \"\",\n        campusId: campus.id\n      });\n      setShowNewStudentForm(false); // Hide the form\n    }\n  };\n\n  // Handle adding existing student\n  const handleAddExistingStudent = e => {\n    e.preventDefault();\n    if (selectedStudent) {\n      updateStudent(selectedStudent, {\n        campusId: campus.id\n      });\n      setSelectedStudent(\"\");\n      setShowExistingStudentForm(false); // Hide the form after submission\n    }\n  };\n  const handleRemoveStudent = async studentId => {\n    await removeStudentFromCampus(studentId, campus.id); // Remove the student\n    fetchCampus(campus.id); // Re-fetch the updated campus data\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: campus.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: campus.imageUrl || \"https://via.placeholder.com/150\",\n      alt: `${campus.name} campus`,\n      style: {\n        width: \"300px\",\n        height: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enrolled Students:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), campus.students && campus.students.length > 0 ? campus.students.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/student/${student.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: `${student.firstname} ${student.lastname}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRemoveStudent(student.id),\n        children: \"Remove Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, this)]\n    }, student.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No students are currently enrolled at this campus.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowNewStudentForm(!showNewStudentForm),\n      children: showNewStudentForm ? \"Cancel Add New Student\" : \"Add New Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowExistingStudentForm(!showExistingStudentForm),\n      children: showExistingStudentForm ? \"Cancel Add Existing Student\" : \"Add Existing Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), showNewStudentForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleNewStudentSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newStudent.firstname,\n          onChange: e => setNewStudent({\n            ...newStudent,\n            firstname: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newStudent.lastname,\n          onChange: e => setNewStudent({\n            ...newStudent,\n            lastname: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: newStudent.email,\n          onChange: e => setNewStudent({\n            ...newStudent,\n            email: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"GPA:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: newStudent.gpa,\n          onChange: e => setNewStudent({\n            ...newStudent,\n            gpa: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this), showExistingStudentForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddExistingStudent,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Existing Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Student:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedStudent,\n          onChange: e => setSelectedStudent(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select a Student --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this), allStudents && allStudents.filter(student => !student.campusId) // Only show students not already enrolled\n          .map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: student.id,\n            children: `${student.firstname} ${student.lastname}`\n          }, student.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add to Campus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/editcampus/${campus.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Edit Campus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n};\n_s(CampusView, \"smkG0/cnuGChUsgf3+bNIEXClu0=\");\n_c = CampusView;\nexport default CampusView;\nvar _c;\n$RefreshReg$(_c, \"CampusView\");","map":{"version":3,"names":["useState","Link","addStudentThunk","removeStudentFromCampusThunk","jsxDEV","_jsxDEV","CampusView","props","_s","campus","allStudents","updateStudent","removeStudentFromCampus","showNewStudentForm","setShowNewStudentForm","showExistingStudentForm","setShowExistingStudentForm","newStudent","setNewStudent","firstname","lastname","email","gpa","campusId","id","selectedStudent","setSelectedStudent","handleNewStudentSubmit","e","preventDefault","addedStudent","handleAddExistingStudent","handleRemoveStudent","studentId","fetchCampus","children","name","fileName","_jsxFileName","lineNumber","columnNumber","address","description","src","imageUrl","alt","style","width","height","students","length","map","student","to","onClick","onSubmit","type","value","onChange","target","required","step","filter","_c","$RefreshReg$"],"sources":["/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/views/CampusView.js"],"sourcesContent":["/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\n\n\n// import { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { addStudentThunk } from \"../../store/thunks\";\n// import { removeStudentFromCampusThunk } from \"../../store/thunks\";\n\n\n\n// const CampusView = (props) => {\n//   const {\n//     campus,\n//     deleteStudent,\n//     allStudents,\n//     updateStudent,\n//   } = props;\n\n//   // Track whether to show the forms\n//   const [showNewStudentForm, setShowNewStudentForm] = useState(false);\n//   const [showExistingStudentForm, setShowExistingStudentForm] = useState(false);\n\n//   // Handle new student form state\n//   const [newStudent, setNewStudent] = useState({\n//     firstname: \"\",\n//     lastname: \"\",\n//     email: \"\",\n//     gpa: \"\",\n//     campusId: campus.id,\n//   });\n\n//   const [selectedStudent, setSelectedStudent] = useState(\"\");\n\n//   // // Handle new student form submission\n//   // const handleNewStudentSubmit = (e) => {\n//   //   e.preventDefault();\n//   //   createStudent(newStudent);\n//   //   setNewStudent({ firstname: \"\", lastname: \"\", email: \"\", gpa: \"\", campusId: campus.id });\n//   //   setShowNewStudentForm(false); // Hide the form after submission\n//   // };\n//    // Handle new student form submission\n//    const handleNewStudentSubmit = async (e) => {\n//     e.preventDefault();\n//     const addedStudent = await addStudentThunk(newStudent); // Call the thunk\n//     if (addedStudent) {\n//       setNewStudent({ firstname: \"\", lastname: \"\", email: \"\", gpa: \"\", campusId: campus.id });\n//       setShowNewStudentForm(false); // Hide the form\n//     }\n//   };\n\n//   // Handle adding existing student\n//   const handleAddExistingStudent = (e) => {\n//     e.preventDefault();\n//     if (selectedStudent) {\n//       updateStudent(selectedStudent, { campusId: campus.id });\n//       setSelectedStudent(\"\");\n//       setShowExistingStudentForm(false); // Hide the form after submission\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>{campus.name}</h1>\n//       <p>{campus.address}</p>\n//       <p>{campus.description}</p>\n//       <img\n//         src={campus.imageUrl || \"https://via.placeholder.com/150\"}\n//         alt={`${campus.name} campus`}\n//         style={{ width: \"300px\", height: \"auto\" }}\n//       />\n//       <br />\n\n//       <h2>Enrolled Students:</h2>\n//       {campus.students && campus.students.length > 0 ? (\n//   campus.students.map((student) => (\n//     <div key={student.id}>\n//       <Link to={`/student/${student.id}`}>\n//         <h3>{`${student.firstname} ${student.lastname}`}</h3>\n//       </Link>\n//       <button onClick={() => deleteStudent(student.id, campus.id)}>\n//         Remove Student\n//       </button>\n\n//     </div>\n//   ))\n// ) : (\n//   <p>No students are currently enrolled at this campus.</p>\n// )}\n\n\n//       <br />\n\n//       {/* Buttons to trigger the forms */}\n//       <button onClick={() => setShowNewStudentForm(!showNewStudentForm)}>\n//         {showNewStudentForm ? \"Cancel Add New Student\" : \"Add New Student\"}\n//       </button>\n//       <br />\n//       <button onClick={() => setShowExistingStudentForm(!showExistingStudentForm)}>\n//         {showExistingStudentForm ? \"Cancel Add Existing Student\" : \"Add Existing Student\"}\n//       </button>\n\n//       {/* New Student Form */}\n//       {showNewStudentForm && (\n//         <form onSubmit={handleNewStudentSubmit}>\n//           <h2>Add New Student</h2>\n//           <label>\n//             First Name:\n//             <input\n//               type=\"text\"\n//               value={newStudent.firstname}\n//               onChange={(e) => setNewStudent({ ...newStudent, firstname: e.target.value })}\n//               required\n//             />\n//           </label>\n//           <br />\n//           <label>\n//             Last Name:\n//             <input\n//               type=\"text\"\n//               value={newStudent.lastname}\n//               onChange={(e) => setNewStudent({ ...newStudent, lastname: e.target.value })}\n//               required\n//             />\n//           </label>\n//           <br />\n//           <label>\n//             Email:\n//             <input\n//               type=\"email\"\n//               value={newStudent.email}\n//               onChange={(e) => setNewStudent({ ...newStudent, email: e.target.value })}\n//               required\n//             />\n//           </label>\n//           <br />\n//           <label>\n//             GPA:\n//             <input\n//               type=\"number\"\n//               step=\"0.01\"\n//               value={newStudent.gpa}\n//               onChange={(e) => setNewStudent({ ...newStudent, gpa: e.target.value })}\n//             />\n//           </label>\n//           <br />\n//           <button type=\"submit\">Add Student</button>\n//         </form>\n//       )}\n\n//       {/* Existing Student Dropdown */}\n//       {showExistingStudentForm && (\n//         <form onSubmit={handleAddExistingStudent}>\n//           <h2>Add Existing Student</h2>\n//           <label>\n//             Select Student:\n//             <select\n//               value={selectedStudent}\n//               onChange={(e) => setSelectedStudent(e.target.value)}\n//               required\n//             >\n//               <option value=\"\">-- Select a Student --</option>\n//               {allStudents &&\n//                 allStudents\n//                   .filter((student) => !student.campusId) // Only show students not already enrolled\n//                   .map((student) => (\n//                     <option key={student.id} value={student.id}>\n//                       {`${student.firstname} ${student.lastname}`}\n//                     </option>\n//                   ))}\n//             </select>\n//           </label>\n//           <br />\n//           <button type=\"submit\">Add to Campus</button>\n//         </form>\n//       )}\n\n//       <br />\n//       <Link to={`/editcampus/${campus.id}`}>\n//         <button>Edit Campus</button>\n//       </Link>\n//     </div>\n//   );\n// };\n\n// export default CampusView;\n\n\n/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\n\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { addStudentThunk, removeStudentFromCampusThunk } from \"../../store/thunks\";\n\n\nconst CampusView = (props) => {\n  const {\n    campus,\n    allStudents,\n    updateStudent,\n    removeStudentFromCampus, // Updated: Pass removeStudentFromCampusThunk as a prop\n  } = props;\n\n  // Track whether to show the forms\n  const [showNewStudentForm, setShowNewStudentForm] = useState(false);\n  const [showExistingStudentForm, setShowExistingStudentForm] = useState(false);\n\n  // Handle new student form state\n  const [newStudent, setNewStudent] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    gpa: \"\",\n    campusId: campus.id,\n  });\n\n  const [selectedStudent, setSelectedStudent] = useState(\"\");\n\n  // Handle new student form submission\n  const handleNewStudentSubmit = async (e) => {\n    e.preventDefault();\n    const addedStudent = await addStudentThunk(newStudent); // Call the thunk\n    if (addedStudent) {\n      setNewStudent({ firstname: \"\", lastname: \"\", email: \"\", gpa: \"\", campusId: campus.id });\n      setShowNewStudentForm(false); // Hide the form\n    }\n  };\n\n  // Handle adding existing student\n  const handleAddExistingStudent = (e) => {\n    e.preventDefault();\n    if (selectedStudent) {\n      updateStudent(selectedStudent, { campusId: campus.id });\n      setSelectedStudent(\"\");\n      setShowExistingStudentForm(false); // Hide the form after submission\n    }\n  };\n\n  const handleRemoveStudent = async (studentId) => {\n    await removeStudentFromCampus(studentId, campus.id); // Remove the student\n    fetchCampus(campus.id); // Re-fetch the updated campus data\n  };\n  \n\n  return (\n    <div>\n      <h1>{campus.name}</h1>\n      <p>{campus.address}</p>\n      <p>{campus.description}</p>\n      <img\n        src={campus.imageUrl || \"https://via.placeholder.com/150\"}\n        alt={`${campus.name} campus`}\n        style={{ width: \"300px\", height: \"auto\" }}\n      />\n      <br />\n\n      <h2>Enrolled Students:</h2>\n      {campus.students && campus.students.length > 0 ? (\n        campus.students.map((student) => (\n          <div key={student.id}>\n            <Link to={`/student/${student.id}`}>\n              <h3>{`${student.firstname} ${student.lastname}`}</h3>\n            </Link>\n            <button onClick={() => handleRemoveStudent(student.id)}>\n              Remove Student\n            </button>\n          </div>\n        ))\n      ) : (\n        <p>No students are currently enrolled at this campus.</p>\n      )}\n\n      <br />\n\n      {/* Buttons to trigger the forms */}\n      <button onClick={() => setShowNewStudentForm(!showNewStudentForm)}>\n        {showNewStudentForm ? \"Cancel Add New Student\" : \"Add New Student\"}\n      </button>\n      <br />\n      <button onClick={() => setShowExistingStudentForm(!showExistingStudentForm)}>\n        {showExistingStudentForm ? \"Cancel Add Existing Student\" : \"Add Existing Student\"}\n      </button>\n\n      {/* New Student Form */}\n      {showNewStudentForm && (\n        <form onSubmit={handleNewStudentSubmit}>\n          <h2>Add New Student</h2>\n          <label>\n            First Name:\n            <input\n              type=\"text\"\n              value={newStudent.firstname}\n              onChange={(e) => setNewStudent({ ...newStudent, firstname: e.target.value })}\n              required\n            />\n          </label>\n          <br />\n          <label>\n            Last Name:\n            <input\n              type=\"text\"\n              value={newStudent.lastname}\n              onChange={(e) => setNewStudent({ ...newStudent, lastname: e.target.value })}\n              required\n            />\n          </label>\n          <br />\n          <label>\n            Email:\n            <input\n              type=\"email\"\n              value={newStudent.email}\n              onChange={(e) => setNewStudent({ ...newStudent, email: e.target.value })}\n              required\n            />\n          </label>\n          <br />\n          <label>\n            GPA:\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              value={newStudent.gpa}\n              onChange={(e) => setNewStudent({ ...newStudent, gpa: e.target.value })}\n            />\n          </label>\n          <br />\n          <button type=\"submit\">Add Student</button>\n        </form>\n      )}\n\n      {/* Existing Student Dropdown */}\n      {showExistingStudentForm && (\n        <form onSubmit={handleAddExistingStudent}>\n          <h2>Add Existing Student</h2>\n          <label>\n            Select Student:\n            <select\n              value={selectedStudent}\n              onChange={(e) => setSelectedStudent(e.target.value)}\n              required\n            >\n              <option value=\"\">-- Select a Student --</option>\n              {allStudents &&\n                allStudents\n                  .filter((student) => !student.campusId) // Only show students not already enrolled\n                  .map((student) => (\n                    <option key={student.id} value={student.id}>\n                      {`${student.firstname} ${student.lastname}`}\n                    </option>\n                  ))}\n            </select>\n          </label>\n          <br />\n          <button type=\"submit\">Add to Campus</button>\n        </form>\n      )}\n\n      <br />\n      <Link to={`/editcampus/${campus.id}`}>\n        <button>Edit Campus</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default CampusView;\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,eAAe,EAAEC,4BAA4B,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnF,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5B,MAAM;IACJC,MAAM;IACNC,WAAW;IACXC,aAAa;IACbC,uBAAuB,CAAE;EAC3B,CAAC,GAAGL,KAAK;;EAET;EACA,MAAM,CAACM,kBAAkB,EAAEC,qBAAqB,CAAC,G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","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/views/EditStudentView.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const StudentView = (props) => {\n//   const { student } = props;\n//   const [campuses, setCampuses] = useState([]); // List of all campuses\n//   const [selectedCampusId, setSelectedCampusId] = useState(\"\"); // Store selected campus ID\n//   const [isCampusDropdownVisible, setIsCampusDropdownVisible] = useState(false); // Track if the dropdown is visible\n//   const [success, setSuccess] = useState(\"\"); // Track success messages\n//   const [error, setError] = useState(\"\"); // Track error messages\n\n//   // Fetch all campuses when the component is mounted\n//   useEffect(() => {\n//     const fetchCampuses = async () => {\n//       try {\n//         const response = await axios.get(\"/api/campuses\");\n//         setCampuses(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching campuses:\", error);\n//         setError(\"Failed to fetch campuses.\");\n//       }\n//     };\n//     fetchCampuses();\n//   }, []);\n\n//   // Handle removing student from campus and refreshing the page\n//   const handleRemoveFromCampus = async () => {\n//     const confirmation = window.confirm(\n//       \"Are you sure you want to remove this student from this campus?\"\n//     );\n//     if (confirmation) {\n//       try {\n//         // Send the request to remove the student from campus\n//         await axios.put(`/api/students/${student.id}/`, {\n//           campusId: null, // Set campusId to null to remove the student from the campus\n//         });\n\n//         setSuccess(\"Student removed from campus successfully!\");\n//         // Reload the page to show updated data\n//         window.location.reload();\n//       } catch (error) {\n//         console.error(\"Error removing student from campus:\", error);\n//         setError(\"An error occurred while removing the student from campus.\");\n//       }\n//     }\n//   };\n\n//   // Handle adding a student to a campus\n//   const handleAddCampus = () => {\n//     if (student.campusId) {\n//       // Show an error message if the student already has a campusId\n//       setError(\"Campus can't be added, student is already enrolled.\");\n//     } else {\n//       setIsCampusDropdownVisible(true); // Show the dropdown if the student doesn't have a campus\n//     }\n//   };\n\n//   // Handle selecting a campus from the dropdown\n//   const handleCampusSelect = (event) => {\n//     setSelectedCampusId(event.target.value);\n//   };\n\n//   // Handle adding the student to the selected campus\n//   const handleAddCampusToStudent = async () => {\n//     if (!selectedCampusId) {\n//       setError(\"Please select a campus.\");\n//       return;\n//     }\n\n//     try {\n//       // Send a request to update the student's campusId\n//       await axios.put(`/api/students/${student.id}/`, {\n//         campusId: selectedCampusId,\n//       });\n\n//       // Update success state instead of using alert\n//       setSuccess(\"Student successfully added to the campus!\");\n\n//       // Optionally, you can manually refresh the page or just update the UI without reloading.\n//       // window.location.reload(); // Refresh the page after adding the campus, or\n//       // you can trigger a state update here to update the component view dynamically instead.\n//     } catch (error) {\n//       console.error(\"Error adding student to campus:\", error);\n//       setError(\"An error occurred while adding the student to campus.\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>{`${student.firstname} ${student.lastname}`}</h1>\n//       <p>Email: {student.email}</p>\n//       <p>GPA: {student.gpa || \"N/A\"}</p>\n//       <img\n//         src={student.imageurl || \"https://via.placeholder.com/150\"}\n//         alt={`${student.firstname} ${student.lastname}`}\n//         style={{ width: \"300px\", height: \"auto\" }}\n//       />\n//       <br />\n\n//       <h2>Enrolled Campus:</h2>\n//       {student.campus ? (\n//         <div>\n//           <Link to={`/campus/${student.campus.id}`}>\n//             <h3>{student.campus.name}</h3>\n//           </Link>\n//           <p>{student.campus.address}</p>\n//           <button onClick={handleRemoveFromCampus}>Remove from Campus</button>\n//         </div>\n//       ) : (\n//         <p>Student not enrolled in any campus.</p>\n//       )}\n\n//       <br />\n//       {/* Show success message */}\n//       {success && <p style={{ color: \"green\" }}>{success}</p>}\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\n//       <br />\n\n//       {/* \"Add Campus\" Button */}\n//       <button onClick={handleAddCampus}>Add Campus</button>\n\n//       {/* Dropdown for selecting a campus */}\n//       {isCampusDropdownVisible && (\n//         <div>\n//           <h3>Select a Campus</h3>\n//           <select onChange={handleCampusSelect} value={selectedCampusId}>\n//             <option value=\"\">Select a campus</option>\n//             {campuses.map((campus) => (\n//               <option key={campus.id} value={campus.id}>\n//                 {campus.name}\n//               </option>\n//             ))}\n//           </select>\n//           <button onClick={handleAddCampusToStudent}>Add to Campus</button>\n//         </div>\n//       )}\n\n//       <br />\n//       <Link to={`/editstudent/${student.id}`}>\n//         <button>Edit Student</button>\n//       </Link>\n//     </div>\n//   );\n// };\n\n// export default StudentView;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditStudentView = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get student ID from the URL\n  const history = useHistory();\n  const [studentData, setStudentData] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    imageurl: \"\",\n    gpa: \"\",\n    campusId: \"\"\n  });\n  const [error, setError] = useState(\"\"); // Error state\n\n  // Fetch student data when the component mounts\n  useEffect(() => {\n    const fetchStudentData = async () => {\n      try {\n        const response = await axios.get(`/api/students/${id}`);\n        setStudentData(response.data); // Set student data to state\n      } catch (error) {\n        setError(\"Error fetching student data.\");\n      }\n    };\n    fetchStudentData();\n  }, [id]);\n\n  // Handle form input changes\n  const handleChange = e => {\n    setStudentData({\n      ...studentData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle saving the changes to the student\n  const handleSaveChanges = async e => {\n    e.preventDefault();\n    try {\n      await axios.put(`/api/students/${id}`, studentData); // Update student\n      history.push(`/student/${id}`); // Redirect back to student view\n    } catch (error) {\n      setError(\"Error saving student data.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSaveChanges,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstname\",\n          value: studentData.firstname,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Last Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastname\",\n          value: studentData.lastname,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: studentData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Image URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"imageurl\",\n          value: studentData.imageurl,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"GPA:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"gpa\",\n          value: studentData.gpa,\n          onChange: handleChange,\n          step: \"0.1\",\n          min: \"0.0\",\n          max: \"4.0\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => history.push(`/student/${id}`),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(EditStudentView, \"VF5HHpdSu/K2I5cQarAxQjYaufs=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = EditStudentView;\nexport default EditStudentView;\nvar _c;\n$RefreshReg$(_c, \"EditStudentView\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useHistory","axios","jsxDEV","_jsxDEV","EditStudentView","_s","id","history","studentData","setStudentData","firstname","lastname","email","imageurl","gpa","campusId","error","setError","fetchStudentData","response","get","data","handleChange","e","target","name","value","handleSaveChanges","preventDefault","put","push","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","onChange","required","step","min","max","onClick","_c","$RefreshReg$"],"sources":["/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/views/EditStudentView.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const StudentView = (props) => {\n//   const { student } = props;\n//   const [campuses, setCampuses] = useState([]); // List of all campuses\n//   const [selectedCampusId, setSelectedCampusId] = useState(\"\"); // Store selected campus ID\n//   const [isCampusDropdownVisible, setIsCampusDropdownVisible] = useState(false); // Track if the dropdown is visible\n//   const [success, setSuccess] = useState(\"\"); // Track success messages\n//   const [error, setError] = useState(\"\"); // Track error messages\n\n//   // Fetch all campuses when the component is mounted\n//   useEffect(() => {\n//     const fetchCampuses = async () => {\n//       try {\n//         const response = await axios.get(\"/api/campuses\");\n//         setCampuses(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching campuses:\", error);\n//         setError(\"Failed to fetch campuses.\");\n//       }\n//     };\n//     fetchCampuses();\n//   }, []);\n\n//   // Handle removing student from campus and refreshing the page\n//   const handleRemoveFromCampus = async () => {\n//     const confirmation = window.confirm(\n//       \"Are you sure you want to remove this student from this campus?\"\n//     );\n//     if (confirmation) {\n//       try {\n//         // Send the request to remove the student from campus\n//         await axios.put(`/api/students/${student.id}/`, {\n//           campusId: null, // Set campusId to null to remove the student from the campus\n//         });\n\n//         setSuccess(\"Student removed from campus successfully!\");\n//         // Reload the page to show updated data\n//         window.location.reload();\n//       } catch (error) {\n//         console.error(\"Error removing student from campus:\", error);\n//         setError(\"An error occurred while removing the student from campus.\");\n//       }\n//     }\n//   };\n\n//   // Handle adding a student to a campus\n//   const handleAddCampus = () => {\n//     if (student.campusId) {\n//       // Show an error message if the student already has a campusId\n//       setError(\"Campus can't be added, student is already enrolled.\");\n//     } else {\n//       setIsCampusDropdownVisible(true); // Show the dropdown if the student doesn't have a campus\n//     }\n//   };\n\n//   // Handle selecting a campus from the dropdown\n//   const handleCampusSelect = (event) => {\n//     setSelectedCampusId(event.target.value);\n//   };\n\n//   // Handle adding the student to the selected campus\n//   const handleAddCampusToStudent = async () => {\n//     if (!selectedCampusId) {\n//       setError(\"Please select a campus.\");\n//       return;\n//     }\n  \n//     try {\n//       // Send a request to update the student's campusId\n//       await axios.put(`/api/students/${student.id}/`, {\n//         campusId: selectedCampusId,\n//       });\n  \n//       // Update success state instead of using alert\n//       setSuccess(\"Student successfully added to the campus!\");\n  \n//       // Optionally, you can manually refresh the page or just update the UI without reloading.\n//       // window.location.reload(); // Refresh the page after adding the campus, or\n//       // you can trigger a state update here to update the component view dynamically instead.\n//     } catch (error) {\n//       console.error(\"Error adding student to campus:\", error);\n//       setError(\"An error occurred while adding the student to campus.\");\n//     }\n//   };\n  \n\n//   return (\n//     <div>\n//       <h1>{`${student.firstname} ${student.lastname}`}</h1>\n//       <p>Email: {student.email}</p>\n//       <p>GPA: {student.gpa || \"N/A\"}</p>\n//       <img\n//         src={student.imageurl || \"https://via.placeholder.com/150\"}\n//         alt={`${student.firstname} ${student.lastname}`}\n//         style={{ width: \"300px\", height: \"auto\" }}\n//       />\n//       <br />\n\n//       <h2>Enrolled Campus:</h2>\n//       {student.campus ? (\n//         <div>\n//           <Link to={`/campus/${student.campus.id}`}>\n//             <h3>{student.campus.name}</h3>\n//           </Link>\n//           <p>{student.campus.address}</p>\n//           <button onClick={handleRemoveFromCampus}>Remove from Campus</button>\n//         </div>\n//       ) : (\n//         <p>Student not enrolled in any campus.</p>\n//       )}\n\n//       <br />\n//       {/* Show success message */}\n//       {success && <p style={{ color: \"green\" }}>{success}</p>}\n//       {error && <p style={{ color: \"red\" }}>{error}</p>}\n//       <br />\n\n//       {/* \"Add Campus\" Button */}\n//       <button onClick={handleAddCampus}>Add Campus</button>\n\n//       {/* Dropdown for selecting a campus */}\n//       {isCampusDropdownVisible && (\n//         <div>\n//           <h3>Select a Campus</h3>\n//           <select onChange={handleCampusSelect} value={selectedCampusId}>\n//             <option value=\"\">Select a campus</option>\n//             {campuses.map((campus) => (\n//               <option key={campus.id} value={campus.id}>\n//                 {campus.name}\n//               </option>\n//             ))}\n//           </select>\n//           <button onClick={handleAddCampusToStudent}>Add to Campus</button>\n//         </div>\n//       )}\n\n//       <br />\n//       <Link to={`/editstudent/${student.id}`}>\n//         <button>Edit Student</button>\n//       </Link>\n//     </div>\n//   );\n// };\n\n// export default StudentView;\n\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst EditStudentView = () => {\n  const { id } = useParams(); // Get student ID from the URL\n  const history = useHistory();\n\n  const [studentData, setStudentData] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    imageurl: \"\",\n    gpa: \"\",\n    campusId: \"\",\n  });\n  const [error, setError] = useState(\"\"); // Error state\n\n  // Fetch student data when the component mounts\n  useEffect(() => {\n    const fetchStudentData = async () => {\n      try {\n        const response = await axios.get(`/api/students/${id}`);\n        setStudentData(response.data); // Set student data to state\n      } catch (error) {\n        setError(\"Error fetching student data.\");\n      }\n    };\n    fetchStudentData();\n  }, [id]);\n\n  // Handle form input changes\n  const handleChange = (e) => {\n    setStudentData({ ...studentData, [e.target.name]: e.target.value });\n  };\n\n  // Handle saving the changes to the student\n  const handleSaveChanges = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.put(`/api/students/${id}`, studentData); // Update student\n      history.push(`/student/${id}`); // Redirect back to student view\n    } catch (error) {\n      setError(\"Error saving student data.\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Edit Student</h1>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      <form onSubmit={handleSaveChanges}>\n        <div>\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            name=\"firstname\"\n            value={studentData.firstname}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div>\n          <label>Last Name:</label>\n          <input\n            type=\"text\"\n            name=\"lastname\"\n            value={studentData.lastname}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div>\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={studentData.email}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div>\n          <label>Image URL:</label>\n          <input\n            type=\"text\"\n            name=\"imageurl\"\n            value={studentData.imageurl}\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label>GPA:</label>\n          <input\n            type=\"number\"\n            name=\"gpa\"\n            value={studentData.gpa}\n            onChange={handleChange}\n            step=\"0.1\"\n            min=\"0.0\"\n            max=\"4.0\"\n            required\n          />\n        </div>\n        <button type=\"submit\">Save Changes</button>\n      </form>\n      <br />\n      <button onClick={() => history.push(`/student/${id}`)}>Cancel</button>\n    </div>\n  );\n};\n\nexport default EditStudentView;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,QAAQ,kBAAkB;AACxD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAMQ,OAAO,GAAGP,UAAU,CAAC,CAAC;EAE5B,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC;IAC7Ca,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,GAAG,EAAE,EAAE;IACPC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMoB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,iBAAiBd,EAAE,EAAE,CAAC;QACvDG,cAAc,CAACU,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MACjC,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdC,QAAQ,CAAC,8BAA8B,CAAC;MAC1C;IACF,CAAC;IACDC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACZ,EAAE,CAAC,CAAC;;EAER;EACA,MAAMgB,YAAY,GAAIC,CAAC,IAAK;IAC1Bd,cAAc,CAAC;MAAE,GAAGD,WAAW;MAAE,CAACe,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EACrE,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAG,MAAOJ,CAAC,IAAK;IACrCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAM3B,KAAK,CAAC4B,GAAG,CAAC,iBAAiBvB,EAAE,EAAE,EAAEE,WAAW,CAAC,CAAC,CAAC;MACrDD,OAAO,CAACuB,IAAI,CAAC,YAAYxB,EAAE,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,QAAQ,CAAC,4BAA4B,CAAC;IACxC;EACF,CAAC;EAED,oBACEd,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAA4B,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBnB,KAAK,iBAAIb,OAAA;MAAGiC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDhC,OAAA;MAAMmC,QAAQ,EAAEX,iBAAkB;MAAAI,QAAA,gBAChC5B,OAAA;QAAA4B,QAAA,gBACE5B,OAAA;UAAA4B,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBhC,OAAA;UACEoC,IAAI,EAAC,MAAM;UACXd,IAAI,EAAC,WAAW;UAChBC,KAAK,EAAElB,WAAW,CAACE,SAAU;UAC7B8B,QAAQ,EAAElB,YAAa;UACvBmB,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNhC,OAAA;QAAA4B,QAAA,gBACE5B,OAAA;UAAA4B,QAAA,EAAO;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzBhC,OAAA;UACEoC,IAAI,EAAC,MAAM;UACXd,IAAI,EAAC,UAAU;UACfC,KAAK,EAAElB,WAAW,CAACG,QAAS;UAC5B6B,QAAQ,EAAElB,YAAa;UACvBmB,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNhC,OAAA;QAAA4B,QAAA,gBACE5B,OAAA;UAAA4B,QAAA,EAAO;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBhC,OAAA;UACEoC,IAAI,EAAC,OAAO;UACZd,IAAI,EAAC,OAAO;UACZC,KAAK,EAAElB,WAAW,CAACI,KAAM;UACzB4B,QAAQ,EAAElB,YAAa;UACvBmB,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNhC,OAAA;QAAA4B,QAAA,gBACE5B,OAAA;UAAA4B,QAAA,EAAO;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzBhC,OAAA;UACEoC,IAAI,EAAC,MAAM;UACXd,IAAI,EAAC,UAAU;UACfC,KAAK,EAAElB,WAAW,CAACK,QAAS;UAC5B2B,QAAQ,EAAElB;QAAa;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNhC,OAAA;QAAA4B,QAAA,gBACE5B,OAAA;UAAA4B,QAAA,EAAO;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBhC,OAAA;UACEoC,IAAI,EAAC,QAAQ;UACbd,IAAI,EAAC,KAAK;UACVC,KAAK,EAAElB,WAAW,CAACM,GAAI;UACvB0B,QAAQ,EAAElB,YAAa;UACvBoB,IAAI,EAAC,KAAK;UACVC,GAAG,EAAC,KAAK;UACTC,GAAG,EAAC,KAAK;UACTH,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNhC,OAAA;QAAQoC,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACPhC,OAAA;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNhC,OAAA;MAAQ0C,OAAO,EAAEA,CAAA,KAAMtC,OAAO,CAACuB,IAAI,CAAC,YAAYxB,EAAE,EAAE,CAAE;MAAAyB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA1GID,eAAe;EAAA,QACJL,SAAS,EACRC,UAAU;AAAA;AAAA8C,EAAA,GAFtB1C,eAAe;AA4GrB,eAAeA,eAAe;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}
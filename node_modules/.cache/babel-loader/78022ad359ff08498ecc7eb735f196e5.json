{"ast":null,"code":"var _jsxFileName = \"/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/containers/EditStudentContainer.js\",\n  _s = $RefreshSig$();\n// // EditStudentContainer.js\n// import React from \"react\";\n// import { Route, Switch } from \"react-router-dom\";\n// import EditStudentView from \"../views/EditStudentView\";\n// import StudentView from \"../views/StudentView\"; // Assuming this is your existing student view\n\n// const EditStudentContainer = () => {\n//   return (\n//     <Switch>\n//       <Route path=\"/editstudent/:id\" component={EditStudentView} />\n//       <Route path=\"/student/:id\" component={StudentView} />\n//     </Switch>\n//   );\n// };\n\n// export default EditStudentContainer;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport EditStudentView from '../views/EditStudentView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditStudentContainer = ({\n  match\n}) => {\n  _s();\n  const {\n    id\n  } = match.params; // Extract student ID from URL\n  const [student, setStudent] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchStudent = async () => {\n      try {\n        const response = await axios.get(`/api/students/${id}`);\n        setStudent(response.data);\n      } catch (err) {\n        setError('Student not found');\n        console.error(err);\n      }\n    };\n    fetchStudent();\n  }, [id]);\n  const handleUpdateStudent = async updatedStudent => {\n    try {\n      await axios.put(`/api/students/${id}`, updatedStudent);\n      alert('Student updated successfully');\n    } catch (err) {\n      setError('Error updating student');\n      console.error(err);\n    }\n  };\n  return student ? /*#__PURE__*/_jsxDEV(EditStudentView, {\n    student: student,\n    onUpdate: handleUpdateStudent,\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(EditStudentContainer, \"Qhz/bES/TRbSMgpI4pCyquM2Fv0=\");\n_c = EditStudentContainer;\nexport default EditStudentContainer;\nvar _c;\n$RefreshReg$(_c, \"EditStudentContainer\");","map":{"version":3,"names":["React","useState","useEffect","axios","EditStudentView","jsxDEV","_jsxDEV","EditStudentContainer","match","_s","id","params","student","setStudent","error","setError","fetchStudent","response","get","data","err","console","handleUpdateStudent","updatedStudent","put","alert","onUpdate","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/containers/EditStudentContainer.js"],"sourcesContent":["// // EditStudentContainer.js\n// import React from \"react\";\n// import { Route, Switch } from \"react-router-dom\";\n// import EditStudentView from \"../views/EditStudentView\";\n// import StudentView from \"../views/StudentView\"; // Assuming this is your existing student view\n\n// const EditStudentContainer = () => {\n//   return (\n//     <Switch>\n//       <Route path=\"/editstudent/:id\" component={EditStudentView} />\n//       <Route path=\"/student/:id\" component={StudentView} />\n//     </Switch>\n//   );\n// };\n\n// export default EditStudentContainer;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport EditStudentView from '../views/EditStudentView';\n\nconst EditStudentContainer = ({ match }) => {\n  const { id } = match.params; // Extract student ID from URL\n  const [student, setStudent] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchStudent = async () => {\n      try {\n        const response = await axios.get(`/api/students/${id}`);\n        setStudent(response.data);\n      } catch (err) {\n        setError('Student not found');\n        console.error(err);\n      }\n    };\n    fetchStudent();\n  }, [id]);\n\n  const handleUpdateStudent = async (updatedStudent) => {\n    try {\n      await axios.put(`/api/students/${id}`, updatedStudent);\n      alert('Student updated successfully');\n    } catch (err) {\n      setError('Error updating student');\n      console.error(err);\n    }\n  };\n\n  return student ? (\n    <EditStudentView student={student} onUpdate={handleUpdateStudent} error={error} />\n  ) : (\n    <div>Loading...</div>\n  );\n};\n\nexport default EditStudentContainer;\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,eAAe,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM;IAAEC;EAAG,CAAC,GAAGF,KAAK,CAACG,MAAM,CAAC,CAAC;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,iBAAiBR,EAAE,EAAE,CAAC;QACvDG,UAAU,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZL,QAAQ,CAAC,mBAAmB,CAAC;QAC7BM,OAAO,CAACP,KAAK,CAACM,GAAG,CAAC;MACpB;IACF,CAAC;IACDJ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACN,EAAE,CAAC,CAAC;EAER,MAAMY,mBAAmB,GAAG,MAAOC,cAAc,IAAK;IACpD,IAAI;MACF,MAAMpB,KAAK,CAACqB,GAAG,CAAC,iBAAiBd,EAAE,EAAE,EAAEa,cAAc,CAAC;MACtDE,KAAK,CAAC,8BAA8B,CAAC;IACvC,CAAC,CAAC,OAAOL,GAAG,EAAE;MACZL,QAAQ,CAAC,wBAAwB,CAAC;MAClCM,OAAO,CAACP,KAAK,CAACM,GAAG,CAAC;IACpB;EACF,CAAC;EAED,OAAOR,OAAO,gBACZN,OAAA,CAACF,eAAe;IAACQ,OAAO,EAAEA,OAAQ;IAACc,QAAQ,EAAEJ,mBAAoB;IAACR,KAAK,EAAEA;EAAM;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAElFxB,OAAA;IAAAyB,QAAA,EAAK;EAAU;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CACrB;AACH,CAAC;AAACrB,EAAA,CAjCIF,oBAAoB;AAAAyB,EAAA,GAApBzB,oBAAoB;AAmC1B,eAAeA,oBAAoB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}
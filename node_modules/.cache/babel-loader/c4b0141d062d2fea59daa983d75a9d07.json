{"ast":null,"code":"// /*==================================================\n// StudentContainer.js\n\n// The Container component is responsible for stateful logic and data fetching, and\n// passes data (if any) as props to the corresponding View component.\n// If needed, it also defines the component's \"connect\" function.\n// ================================================== */\n\n// import Header from './Header';\n// import React, { useEffect } from 'react';\n// import { connect } from 'react-redux';\n// import { useParams, withRouter } from 'react-router-dom';\n// import StudentView from '../views/StudentView';\n// import { \n//   fetchStudentThunk, \n//   fetchCampusThunk,\n//   deleteStudentThunk \n// } from \"../../store/thunks\";\n\n// const StudentContainer = ({\n//   student, \n//   campus, \n//   fetchStudent, \n//   fetchCampus,\n//   deleteStudent,\n//   history\n// }) => {\n//   const { id } = useParams();\n\n//   // Debug to ensure id is correct\n//   console.log('StudentContainer: useParams id:', id);\n\n//   useEffect(() => {\n//     fetchStudent(id);\n//   }, [id, fetchStudent]);\n\n//   useEffect(() => {\n//     if (student?.campusId) {\n//       fetchCampus(student.campusId);\n//     }\n//   }, [student, fetchCampus]);\n\n//   console.log('StudentContainer: student prop:', student);\n//   console.log('StudentContainer: campus prop:', campus);\n\n//   if (!student) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       {/* Include the shared Header */}\n//       <Header />\n\n//       {/* Render the StudentView component */}\n//       <StudentView\n//         student={student}\n//         campus={campus}\n//         onDeleteStudent={(id) => {\n//           deleteStudent(id);\n//           history.push(\"/students\"); // Redirect to the students list\n//         }}\n//       />\n//     </div>\n//   );\n// };\n\n// const mapStateToProps = (state) => ({\n//   student: state.student || null, // Ensure reducer state is mapped correctly\n//   campus: state.campus?.selectedCampus || null, // Ensure reducer state is mapped correctly\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n//   fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n//   deleteStudent: (id) => dispatch(deleteStudentThunk(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(withRouter(StudentContainer));","map":{"version":3,"names":[],"sources":["/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/containers/StudentContainer.js"],"sourcesContent":["// /*==================================================\n// StudentContainer.js\n\n// The Container component is responsible for stateful logic and data fetching, and\n// passes data (if any) as props to the corresponding View component.\n// If needed, it also defines the component's \"connect\" function.\n// ================================================== */\n\n// import Header from './Header';\n// import React, { useEffect } from 'react';\n// import { connect } from 'react-redux';\n// import { useParams, withRouter } from 'react-router-dom';\n// import StudentView from '../views/StudentView';\n// import { \n//   fetchStudentThunk, \n//   fetchCampusThunk,\n//   deleteStudentThunk \n// } from \"../../store/thunks\";\n\n// const StudentContainer = ({\n//   student, \n//   campus, \n//   fetchStudent, \n//   fetchCampus,\n//   deleteStudent,\n//   history\n// }) => {\n//   const { id } = useParams();\n\n//   // Debug to ensure id is correct\n//   console.log('StudentContainer: useParams id:', id);\n\n//   useEffect(() => {\n//     fetchStudent(id);\n//   }, [id, fetchStudent]);\n\n//   useEffect(() => {\n//     if (student?.campusId) {\n//       fetchCampus(student.campusId);\n//     }\n//   }, [student, fetchCampus]);\n\n//   console.log('StudentContainer: student prop:', student);\n//   console.log('StudentContainer: campus prop:', campus);\n\n//   if (!student) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       {/* Include the shared Header */}\n//       <Header />\n\n//       {/* Render the StudentView component */}\n//       <StudentView\n//         student={student}\n//         campus={campus}\n//         onDeleteStudent={(id) => {\n//           deleteStudent(id);\n//           history.push(\"/students\"); // Redirect to the students list\n//         }}\n//       />\n//     </div>\n//   );\n// };\n\n// const mapStateToProps = (state) => ({\n//   student: state.student || null, // Ensure reducer state is mapped correctly\n//   campus: state.campus?.selectedCampus || null, // Ensure reducer state is mapped correctly\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n//   fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n//   deleteStudent: (id) => dispatch(deleteStudentThunk(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(withRouter(StudentContainer));\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}
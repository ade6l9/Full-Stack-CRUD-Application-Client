{"ast":null,"code":"var _jsxFileName = \"/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/views/CampusView.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const CampusView = (props) => {\n//   const { campus, removeStudentFromCampus, fetchCampus } = props;\n\n//   const [showAddStudentForm, setShowAddStudentForm] = useState(false);\n//   const [showAddExistingStudentForm, setShowAddExistingStudentForm] = useState(false);\n//   const [formData, setFormData] = useState({\n//     firstname: \"\",\n//     lastname: \"\",\n//     email: \"\",\n//     imageurl: \"\",\n//     gpa: \"\",\n//   });\n//   const [error, setError] = useState(\"\");\n//   const [success, setSuccess] = useState(\"\");\n//   const [studentsWithoutCampus, setStudentsWithoutCampus] = useState([]);\n\n//   // Fetch students who do not belong to any campus\n//   useEffect(() => {\n//     const fetchStudentsWithoutCampus = async () => {\n//       try {\n//         const response = await axios.get(\"/api/students/without-campus\");\n//         setStudentsWithoutCampus(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching students without a campus:\", error);\n//       }\n//     };\n//     fetchStudentsWithoutCampus();\n//   }, []);\n\n//   // Handle removing a student with confirmation\n//   const handleRemoveStudent = async (studentId) => {\n//     const confirmation = window.confirm(\n//       \"Are you sure you want to remove this student?\"\n//     );\n//     if (confirmation) {\n//       await removeStudentFromCampus(studentId, campus.id); // Remove the student\n//       await fetchCampus(campus.id); // Re-fetch the updated campus data\n//     }\n//   };\n\n//   // Handle form input changes\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   // Handle adding a new student to the campus\n//   const handleAddStudent = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n//     setSuccess(\"\");\n\n//     try {\n//       const response = await axios.post(\"/api/students\", {\n//         ...formData,\n//         campusId: campus.id, // Add campusId to form data\n//       });\n\n//       setSuccess(\"Student added successfully!\");\n//       setFormData({\n//         firstname: \"\",\n//         lastname: \"\",\n//         email: \"\",\n//         imageurl: \"\",\n//         gpa: \"\",\n//       });\n//       setShowAddStudentForm(false);\n//       await fetchCampus(campus.id);\n//     } catch (error) {\n//       console.error(error);\n//       setError(\n//         error.response?.data?.error || \"An error occurred while adding the student.\"\n//       );\n//     }\n//   };\n\n//   // Handle adding an existing student to the campus\n//   const handleAddExistingStudent = async (studentId) => {\n//     try {\n//       const response = await axios.put(`/api/students/${studentId}/add-to-campus`, {\n//         campusId: campus.id,\n//       });\n\n//       setSuccess(\"Existing student added to campus!\");\n//       await fetchCampus(campus.id); // Re-fetch campus data\n//       setShowAddExistingStudentForm(false);\n//     } catch (error) {\n//       console.error(\"Error adding existing student:\", error);\n//       setError(\"An error occurred while adding the existing student.\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>{campus.name}</h1>\n//       <p>{campus.address}</p>\n//       <p>{campus.description}</p>\n//       <img\n//         src={campus.imageUrl || \"https://via.placeholder.com/150\"}\n//         alt={`${campus.name} campus`}\n//         style={{ width: \"300px\", height: \"auto\" }}\n//       />\n//       <br />\n\n//       <h2>Enrolled Students:</h2>\n//       {campus.students && campus.students.length > 0 ? (\n//         campus.students.map((student) => (\n//           <div key={student.id}>\n//             <Link to={`/student/${student.id}`}>\n//               <h3>{`${student.firstname} ${student.lastname}`}</h3>\n//             </Link>\n//             <button onClick={() => handleRemoveStudent(student.id)}>\n//               Remove Student\n//             </button>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No students are currently enrolled at this campus.</p>\n//       )}\n\n//       <br />\n\n//       <button onClick={() => setShowAddStudentForm(!showAddStudentForm)}>\n//         {showAddStudentForm\n//           ? \"Close Add Student Form\"\n//           : \"Add New Student to This Campus\"}\n//       </button>\n\n//       <button onClick={() => setShowAddExistingStudentForm(!showAddExistingStudentForm)}>\n//         {showAddExistingStudentForm\n//           ? \"Close Add Existing Student Form\"\n//           : \"Add Existing Student to This Campus\"}\n//       </button>\n\n//       {showAddExistingStudentForm && (\n//         <div>\n//           <h2>Add Existing Student</h2>\n//           {error && <p style={{ color: \"red\" }}>{error}</p>}\n//           {success && <p style={{ color: \"green\" }}>{success}</p>}\n//           <ul>\n//             {studentsWithoutCampus.map((student) => (\n//               <li key={student.id}>\n//                 <span>{`${student.firstname} ${student.lastname}`}</span>\n//                 <button onClick={() => handleAddExistingStudent(student.id)}>\n//                   Add to Campus\n//                 </button>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n\n//       {showAddStudentForm && (\n//         <div>\n//           <h2>Add New Student</h2>\n//           {error && <p style={{ color: \"red\" }}>{error}</p>}\n//           {success && <p style={{ color: \"green\" }}>{success}</p>}\n//           <form onSubmit={handleAddStudent}>\n//             <div>\n//               <label>First Name:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"firstname\"\n//                 value={formData.firstname}\n//                 onChange={handleChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Last Name:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"lastname\"\n//                 value={formData.lastname}\n//                 onChange={handleChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Email:</label>\n//               <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 value={formData.email}\n//                 onChange={handleChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Image URL:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"imageurl\"\n//                 value={formData.imageurl}\n//                 onChange={handleChange}\n//               />\n//             </div>\n//             <div>\n//               <label>GPA:</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"gpa\"\n//                 value={formData.gpa}\n//                 onChange={handleChange}\n//                 step=\"0.1\"\n//                 min=\"0.0\"\n//                 max=\"4.0\"\n//                 required\n//               />\n//             </div>\n//             <button type=\"submit\">Add Student</button>\n//           </form>\n//         </div>\n//       )}\n\n//       <br />\n//       <Link to={`/editcampus/${campus.id}`}>\n//         <button>Edit Campus</button>\n//       </Link>\n//     </div>\n//   );\n// };\n\n// export default CampusView;\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampusView = props => {\n  _s();\n  const {\n    campus,\n    removeStudentFromCampus,\n    fetchCampus\n  } = props;\n  const [showAddStudentForm, setShowAddStudentForm] = useState(false);\n  const [showAddExistingStudentForm, setShowAddExistingStudentForm] = useState(false);\n  const [formData, setFormData] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    imageurl: \"\",\n    gpa: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [studentsWithoutCampus, setStudentsWithoutCampus] = useState([]);\n  const [selectedStudent, setSelectedStudent] = useState(null); // Store selected student\n\n  // Fetch students who do not belong to any campus\n  const fetchStudentsWithoutCampus = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(\"/api/students/\");\n      setStudentsWithoutCampus(data); // Directly use `data` without needing to reference `response`\n    } catch (error) {\n      console.error(\"Error fetching students without a campus:\", error);\n      setError(\"Failed to fetch students without a campus\");\n    }\n  };\n\n  // Handle removing a student with confirmation\n  const handleRemoveStudent = async studentId => {\n    const confirmation = window.confirm(\"Are you sure you want to remove this student?\");\n    if (confirmation) {\n      await removeStudentFromCampus(studentId, campus.id); // Remove the student\n      await fetchCampus(campus.id); // Re-fetch the updated campus data\n    }\n  };\n\n  // Handle form input changes\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle adding a new student to the campus\n  const handleAddStudent = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n    try {\n      await axios.post(\"/api/students\", {\n        ...formData,\n        campusId: campus.id // Add campusId to form data\n      });\n      setSuccess(\"Student added successfully!\");\n      setFormData({\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        imageurl: \"\",\n        gpa: \"\"\n      });\n      setShowAddStudentForm(false);\n      await fetchCampus(campus.id);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"An error occurred while adding the student.\");\n    }\n  };\n\n  // Handle selecting an existing student from dropdown\n  const handleAddExistingStudent = async () => {\n    if (!selectedStudent) {\n      setError(\"Please select a student.\");\n      return;\n    }\n    try {\n      const response = await axios.put(`/api/students/${selectedStudent}/`, {\n        campusId: campus.id\n      });\n      setSuccess(\"Existing student added to campus!\");\n      setShowAddExistingStudentForm(false); // Hide dropdown after selection\n      await fetchCampus(campus.id); // Re-fetch campus data\n    } catch (error) {\n      console.error(\"Error adding existing student:\", error);\n      setError(\"An error occurred while adding the existing student.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: campus.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: campus.imageUrl || \"https://via.placeholder.com/150\",\n      alt: `${campus.name} campus`,\n      style: {\n        width: \"300px\",\n        height: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enrolled Students:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), campus.students && campus.students.length > 0 ? campus.students.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/student/${student.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: `${student.firstname} ${student.lastname}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRemoveStudent(student.id),\n        children: \"Remove Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 13\n      }, this)]\n    }, student.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No students are currently enrolled at this campus.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAddStudentForm(!showAddStudentForm),\n      children: showAddStudentForm ? \"Close Add Student Form\" : \"Add New Student to This Campus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setShowAddExistingStudentForm(true);\n        fetchStudentsWithoutCampus();\n      },\n      children: showAddExistingStudentForm ? \"Close Add Existing Student Form\" : \"Add Existing Student to This Campus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), showAddExistingStudentForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Existing Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 21\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"green\"\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedStudent(e.target.value),\n        value: selectedStudent || \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this), studentsWithoutCampus.map(student => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: student.id,\n          children: `${student.firstname} ${student.lastname}`\n        }, student.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddExistingStudent,\n        children: \"Add to Campus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }, this), showAddStudentForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add New Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 21\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"green\"\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddStudent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"First Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"firstname\",\n            value: formData.firstname,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Last Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lastname\",\n            value: formData.lastname,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Image URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"imageurl\",\n            value: formData.imageurl,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"GPA:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"gpa\",\n            value: formData.gpa,\n            onChange: handleChange,\n            step: \"0.1\",\n            min: \"0.0\",\n            max: \"4.0\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/editcampus/${campus.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Edit Campus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n};\n_s(CampusView, \"T0inqQkLG5P1BUbXZqRPh3d/h6Y=\");\n_c = CampusView;\nexport default CampusView;\nvar _c;\n$RefreshReg$(_c, \"CampusView\");","map":{"version":3,"names":["React","useState","Link","axios","jsxDEV","_jsxDEV","CampusView","props","_s","campus","removeStudentFromCampus","fetchCampus","showAddStudentForm","setShowAddStudentForm","showAddExistingStudentForm","setShowAddExistingStudentForm","formData","setFormData","firstname","lastname","email","imageurl","gpa","error","setError","success","setSuccess","studentsWithoutCampus","setStudentsWithoutCampus","selectedStudent","setSelectedStudent","fetchStudentsWithoutCampus","data","get","console","handleRemoveStudent","studentId","confirmation","window","confirm","id","handleChange","e","target","name","value","handleAddStudent","preventDefault","post","campusId","_error$response","_error$response$data","response","handleAddExistingStudent","put","children","fileName","_jsxFileName","lineNumber","columnNumber","address","description","src","imageUrl","alt","style","width","height","students","length","map","student","to","onClick","color","onChange","onSubmit","type","required","step","min","max","_c","$RefreshReg$"],"sources":["/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/views/CampusView.js"],"sourcesContent":["\n\n// import React, { useState, useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const CampusView = (props) => {\n//   const { campus, removeStudentFromCampus, fetchCampus } = props;\n\n//   const [showAddStudentForm, setShowAddStudentForm] = useState(false);\n//   const [showAddExistingStudentForm, setShowAddExistingStudentForm] = useState(false);\n//   const [formData, setFormData] = useState({\n//     firstname: \"\",\n//     lastname: \"\",\n//     email: \"\",\n//     imageurl: \"\",\n//     gpa: \"\",\n//   });\n//   const [error, setError] = useState(\"\");\n//   const [success, setSuccess] = useState(\"\");\n//   const [studentsWithoutCampus, setStudentsWithoutCampus] = useState([]);\n\n//   // Fetch students who do not belong to any campus\n//   useEffect(() => {\n//     const fetchStudentsWithoutCampus = async () => {\n//       try {\n//         const response = await axios.get(\"/api/students/without-campus\");\n//         setStudentsWithoutCampus(response.data);\n//       } catch (error) {\n//         console.error(\"Error fetching students without a campus:\", error);\n//       }\n//     };\n//     fetchStudentsWithoutCampus();\n//   }, []);\n\n//   // Handle removing a student with confirmation\n//   const handleRemoveStudent = async (studentId) => {\n//     const confirmation = window.confirm(\n//       \"Are you sure you want to remove this student?\"\n//     );\n//     if (confirmation) {\n//       await removeStudentFromCampus(studentId, campus.id); // Remove the student\n//       await fetchCampus(campus.id); // Re-fetch the updated campus data\n//     }\n//   };\n\n//   // Handle form input changes\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   // Handle adding a new student to the campus\n//   const handleAddStudent = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n//     setSuccess(\"\");\n\n//     try {\n//       const response = await axios.post(\"/api/students\", {\n//         ...formData,\n//         campusId: campus.id, // Add campusId to form data\n//       });\n\n//       setSuccess(\"Student added successfully!\");\n//       setFormData({\n//         firstname: \"\",\n//         lastname: \"\",\n//         email: \"\",\n//         imageurl: \"\",\n//         gpa: \"\",\n//       });\n//       setShowAddStudentForm(false);\n//       await fetchCampus(campus.id);\n//     } catch (error) {\n//       console.error(error);\n//       setError(\n//         error.response?.data?.error || \"An error occurred while adding the student.\"\n//       );\n//     }\n//   };\n\n//   // Handle adding an existing student to the campus\n//   const handleAddExistingStudent = async (studentId) => {\n//     try {\n//       const response = await axios.put(`/api/students/${studentId}/add-to-campus`, {\n//         campusId: campus.id,\n//       });\n\n//       setSuccess(\"Existing student added to campus!\");\n//       await fetchCampus(campus.id); // Re-fetch campus data\n//       setShowAddExistingStudentForm(false);\n//     } catch (error) {\n//       console.error(\"Error adding existing student:\", error);\n//       setError(\"An error occurred while adding the existing student.\");\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>{campus.name}</h1>\n//       <p>{campus.address}</p>\n//       <p>{campus.description}</p>\n//       <img\n//         src={campus.imageUrl || \"https://via.placeholder.com/150\"}\n//         alt={`${campus.name} campus`}\n//         style={{ width: \"300px\", height: \"auto\" }}\n//       />\n//       <br />\n\n//       <h2>Enrolled Students:</h2>\n//       {campus.students && campus.students.length > 0 ? (\n//         campus.students.map((student) => (\n//           <div key={student.id}>\n//             <Link to={`/student/${student.id}`}>\n//               <h3>{`${student.firstname} ${student.lastname}`}</h3>\n//             </Link>\n//             <button onClick={() => handleRemoveStudent(student.id)}>\n//               Remove Student\n//             </button>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No students are currently enrolled at this campus.</p>\n//       )}\n\n//       <br />\n\n//       <button onClick={() => setShowAddStudentForm(!showAddStudentForm)}>\n//         {showAddStudentForm\n//           ? \"Close Add Student Form\"\n//           : \"Add New Student to This Campus\"}\n//       </button>\n\n//       <button onClick={() => setShowAddExistingStudentForm(!showAddExistingStudentForm)}>\n//         {showAddExistingStudentForm\n//           ? \"Close Add Existing Student Form\"\n//           : \"Add Existing Student to This Campus\"}\n//       </button>\n\n//       {showAddExistingStudentForm && (\n//         <div>\n//           <h2>Add Existing Student</h2>\n//           {error && <p style={{ color: \"red\" }}>{error}</p>}\n//           {success && <p style={{ color: \"green\" }}>{success}</p>}\n//           <ul>\n//             {studentsWithoutCampus.map((student) => (\n//               <li key={student.id}>\n//                 <span>{`${student.firstname} ${student.lastname}`}</span>\n//                 <button onClick={() => handleAddExistingStudent(student.id)}>\n//                   Add to Campus\n//                 </button>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n\n//       {showAddStudentForm && (\n//         <div>\n//           <h2>Add New Student</h2>\n//           {error && <p style={{ color: \"red\" }}>{error}</p>}\n//           {success && <p style={{ color: \"green\" }}>{success}</p>}\n//           <form onSubmit={handleAddStudent}>\n//             <div>\n//               <label>First Name:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"firstname\"\n//                 value={formData.firstname}\n//                 onChange={handleChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Last Name:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"lastname\"\n//                 value={formData.lastname}\n//                 onChange={handleChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Email:</label>\n//               <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 value={formData.email}\n//                 onChange={handleChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Image URL:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"imageurl\"\n//                 value={formData.imageurl}\n//                 onChange={handleChange}\n//               />\n//             </div>\n//             <div>\n//               <label>GPA:</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"gpa\"\n//                 value={formData.gpa}\n//                 onChange={handleChange}\n//                 step=\"0.1\"\n//                 min=\"0.0\"\n//                 max=\"4.0\"\n//                 required\n//               />\n//             </div>\n//             <button type=\"submit\">Add Student</button>\n//           </form>\n//         </div>\n//       )}\n\n//       <br />\n//       <Link to={`/editcampus/${campus.id}`}>\n//         <button>Edit Campus</button>\n//       </Link>\n//     </div>\n//   );\n// };\n\n// export default CampusView;\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst CampusView = (props) => {\n  const { campus, removeStudentFromCampus, fetchCampus } = props;\n\n  const [showAddStudentForm, setShowAddStudentForm] = useState(false);\n  const [showAddExistingStudentForm, setShowAddExistingStudentForm] = useState(false);\n  const [formData, setFormData] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    imageurl: \"\",\n    gpa: \"\",\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [studentsWithoutCampus, setStudentsWithoutCampus] = useState([]);\n  const [selectedStudent, setSelectedStudent] = useState(null); // Store selected student\n\n  // Fetch students who do not belong to any campus\n  const fetchStudentsWithoutCampus = async () => {\n    try {\n      const { data } = await axios.get(\"/api/students/\");\n      setStudentsWithoutCampus(data); // Directly use `data` without needing to reference `response`\n    } catch (error) {\n      console.error(\"Error fetching students without a campus:\", error);\n      setError(\"Failed to fetch students without a campus\");\n    }\n  };\n  \n  \n  // Handle removing a student with confirmation\n  const handleRemoveStudent = async (studentId) => {\n    const confirmation = window.confirm(\n      \"Are you sure you want to remove this student?\"\n    );\n    if (confirmation) {\n      await removeStudentFromCampus(studentId, campus.id); // Remove the student\n      await fetchCampus(campus.id); // Re-fetch the updated campus data\n    }\n  };\n\n  // Handle form input changes\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  // Handle adding a new student to the campus\n  const handleAddStudent = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n\n    try {\n      await axios.post(\"/api/students\", {\n        ...formData,\n        campusId: campus.id, // Add campusId to form data\n      });\n\n      setSuccess(\"Student added successfully!\");\n      setFormData({\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        imageurl: \"\",\n        gpa: \"\",\n      });\n      setShowAddStudentForm(false);\n      await fetchCampus(campus.id);\n    } catch (error) {\n      console.error(error);\n      setError(\n        error.response?.data?.error || \"An error occurred while adding the student.\"\n      );\n    }\n  };\n\n  // Handle selecting an existing student from dropdown\n  const handleAddExistingStudent = async () => {\n    if (!selectedStudent) {\n      setError(\"Please select a student.\");\n      return;\n    }\n\n    try {\n      const response = await axios.put(`/api/students/${selectedStudent}/`, {\n        campusId: campus.id,\n      });\n\n      setSuccess(\"Existing student added to campus!\");\n      setShowAddExistingStudentForm(false); // Hide dropdown after selection\n      await fetchCampus(campus.id); // Re-fetch campus data\n    } catch (error) {\n      console.error(\"Error adding existing student:\", error);\n      setError(\"An error occurred while adding the existing student.\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>{campus.name}</h1>\n      <p>{campus.address}</p>\n      <p>{campus.description}</p>\n      <img\n        src={campus.imageUrl || \"https://via.placeholder.com/150\"}\n        alt={`${campus.name} campus`}\n        style={{ width: \"300px\", height: \"auto\" }}\n      />\n      <br />\n\n      <h2>Enrolled Students:</h2>\n      {campus.students && campus.students.length > 0 ? (\n        campus.students.map((student) => (\n          <div key={student.id}>\n            <Link to={`/student/${student.id}`}>\n              <h3>{`${student.firstname} ${student.lastname}`}</h3>\n            </Link>\n            <button onClick={() => handleRemoveStudent(student.id)}>\n              Remove Student\n            </button>\n          </div>\n        ))\n      ) : (\n        <p>No students are currently enrolled at this campus.</p>\n      )}\n\n      <br />\n\n      <button onClick={() => setShowAddStudentForm(!showAddStudentForm)}>\n        {showAddStudentForm\n          ? \"Close Add Student Form\"\n          : \"Add New Student to This Campus\"}\n      </button>\n\n      <button onClick={() => { setShowAddExistingStudentForm(true); fetchStudentsWithoutCampus(); }}>\n        {showAddExistingStudentForm\n          ? \"Close Add Existing Student Form\"\n          : \"Add Existing Student to This Campus\"}\n      </button>\n\n      {showAddExistingStudentForm && (\n        <div>\n          <h2>Add Existing Student</h2>\n          {error && <p style={{ color: \"red\" }}>{error}</p>}\n          {success && <p style={{ color: \"green\" }}>{success}</p>}\n          <select\n            onChange={(e) => setSelectedStudent(e.target.value)}\n            value={selectedStudent || \"\"}\n          >\n            <option value=\"\">Select a student</option>\n            {studentsWithoutCampus.map((student) => (\n              <option key={student.id} value={student.id}>\n                {`${student.firstname} ${student.lastname}`}\n              </option>\n            ))}\n          </select>\n          <button onClick={handleAddExistingStudent}>Add to Campus</button>\n        </div>\n      )}\n\n      {showAddStudentForm && (\n        <div>\n          <h2>Add New Student</h2>\n          {error && <p style={{ color: \"red\" }}>{error}</p>}\n          {success && <p style={{ color: \"green\" }}>{success}</p>}\n          <form onSubmit={handleAddStudent}>\n            <div>\n              <label>First Name:</label>\n              <input\n                type=\"text\"\n                name=\"firstname\"\n                value={formData.firstname}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <div>\n              <label>Last Name:</label>\n              <input\n                type=\"text\"\n                name=\"lastname\"\n                value={formData.lastname}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <div>\n              <label>Email:</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                required\n              />\n            </div>\n            <div>\n              <label>Image URL:</label>\n              <input\n                type=\"text\"\n                name=\"imageurl\"\n                value={formData.imageurl}\n                onChange={handleChange}\n              />\n            </div>\n            <div>\n              <label>GPA:</label>\n              <input\n                type=\"number\"\n                name=\"gpa\"\n                value={formData.gpa}\n                onChange={handleChange}\n                step=\"0.1\"\n                min=\"0.0\"\n                max=\"4.0\"\n                required\n              />\n            </div>\n            <button type=\"submit\">Add Student</button>\n          </form>\n        </div>\n      )}\n\n      <br />\n      <Link to={`/editcampus/${campus.id}`}>\n        <button>Edit Campus</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default CampusView;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
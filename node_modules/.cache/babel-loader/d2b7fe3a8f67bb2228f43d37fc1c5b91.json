{"ast":null,"code":"var _jsxFileName = \"/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/views/NewStudentView.js\";\n// /*==================================================\n// NewStudentView.js\n\n// The Views component is responsible for rendering web page with data provided by the corresponding Container component.\n// It constructs a React component to display the new student page.\n// ================================================== */\n// import Button from '@material-ui/core/Button';\n// import Typography from '@material-ui/core/Typography';\n// import { makeStyles } from '@material-ui/core/styles';\n\n// // Create styling for the input form\n// const useStyles = makeStyles( () => ({\n//   formContainer:{  \n//     width: '500px',\n//     backgroundColor: '#f0f0f5',\n//     borderRadius: '5px',\n//     margin: 'auto',\n//   },\n//   title: {\n//     flexGrow: 1,\n//     textAlign: 'left',\n//     textDecoration: 'none'\n//   }, \n//   customizeAppBar:{\n//     backgroundColor: '#11153e',\n//     shadows: ['none'],\n//   },\n//   formTitle:{\n//     backgroundColor:'#c5c8d6',\n//     marginBottom: '15px',\n//     textAlign: 'center',\n//     borderRadius: '5px 5px 0px 0px',\n//     padding: '3px'\n//   },\n// }));\n\n// const NewStudentView = (props) => {\n//   const {handleChange, handleSubmit } = props;\n//   const classes = useStyles();\n\n//   // Render a New Student view with an input form\n//   return (\n//     <div>\n//       <h1>New Student</h1>\n\n//       <div className={classes.root}>\n//         <div className={classes.formContainer}>\n//           <div className={classes.formTitle}>\n//             <Typography style={{fontWeight: 'bold', fontFamily: 'Courier, sans-serif', fontSize: '20px', color: '#11153e'}}>\n//               Add a Student\n//             </Typography>\n//           </div>\n//           <form style={{textAlign: 'center'}} onSubmit={(e) => handleSubmit(e)}>\n//             <label style= {{color:'#11153e', fontWeight: 'bold'}}>First Name: </label>\n//             <input type=\"text\" name=\"firstname\" onChange ={(e) => handleChange(e)} />\n//             <br/>\n//             <br/>\n\n//             <label style={{color:'#11153e', fontWeight: 'bold'}}>Last Name: </label>\n//             <input type=\"text\" name=\"lastname\" onChange={(e) => handleChange(e)} />\n//             <br/>\n//             <br/>\n\n//             <label style={{color:'#11153e', fontWeight: 'bold'}}>Campus Id: </label>\n//             <input type=\"text\" name=\"campusId\" onChange={(e) => handleChange(e)} />\n//             <br/>\n//             <br/>\n\n//             <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n//               Submit\n//             </Button>\n//             <br/>\n//             <br/>\n//           </form>\n//           </div>\n//       </div>\n//     </div>    \n//   )\n// }\n\n// export default NewStudentView;\n\n/*==================================================\nNewStudentView.js\n\nThe Views component is responsible for rendering the web page with data provided by the corresponding Container component.\nIt constructs a React component to display the new student page.\n================================================== */\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Create styling for the input form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  formContainer: {\n    width: '500px',\n    backgroundColor: '#f0f0f5',\n    borderRadius: '5px',\n    margin: 'auto',\n    padding: '20px'\n  },\n  title: {\n    textAlign: 'center',\n    fontFamily: 'Courier, sans-serif',\n    fontSize: '20px',\n    color: '#11153e'\n  },\n  errorMessage: {\n    color: 'red',\n    fontSize: '0.8em',\n    // Corrected this line\n    marginBottom: '10px'\n  },\n  inputField: {\n    width: '100%',\n    height: '40px',\n    marginBottom: '20px',\n    padding: '10px',\n    border: '1px solid #ccc',\n    borderRadius: '5px'\n  },\n  submitButton: {\n    width: '100%',\n    height: '40px',\n    backgroundColor: '#4CAF50',\n    color: '#fff',\n    padding: '10px',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer'\n  }\n}));\n\n// const NewStudentView = ({ handleChange, handleSubmit, studentData }) => {\n//   const classes = useStyles();\n\n//   return (\n//     <div className={classes.formContainer}>\n//       <Typography className={classes.title}>Add New Student</Typography>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"firstname\"\n//           value={studentData.firstname}\n//           onChange={handleChange}\n//           placeholder=\"First Name\"\n//           className={classes.inputField}\n//         />\n//         {studentData.errors && studentData.errors.firstname && (\n//           <div className={classes.errorMessage}>\n//             {studentData.errors.firstname}\n//           </div>\n//         )}\n//         <input\n//           type=\"text\"\n//           name=\"lastname\"\n//           value={studentData.lastname}\n//           onChange={handleChange}\n//           placeholder=\"Last Name\"\n//           className={classes.inputField}\n//         />\n//         {studentData.errors && studentData.errors.lastname && (\n//           <div className={classes.errorMessage}>\n//             {studentData.errors.lastname}\n//           </div>\n//         )}\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={studentData.email}\n//           onChange={handleChange}\n//           placeholder=\"Email\"\n//           className={classes.inputField}\n//         />\n//         {studentData.errors && studentData.errors.email && (\n//           <div className={classes.errorMessage}>\n//             {studentData.errors.email}\n//           </div>\n//         )}\n//         <input\n//           type=\"number\"\n//           name=\"gpa\"\n//           value={studentData.gpa}\n//           onChange={handleChange}\n//           placeholder=\"GPA\"\n//           className={classes.inputField}\n//         />\n//         {studentData.errors && studentData.errors.gpa && (\n//           <div className={classes.errorMessage}>\n//             {studentData.errors.gpa}\n//           </div>\n//         )}\n//         <input\n//           type=\"text\"\n//           name=\"campusId\"\n//           value={studentData.campusId}\n//           onChange={handleChange}\n//           placeholder=\"Campus ID\"\n//           className={classes.inputField}\n//         />\n//         {studentData.errors && studentData.errors.campusId && (\n//           <div className={classes.errorMessage}>\n//             {studentData.errors.campusId}\n//           </div>\n//         )}\n//         <input\n//           type=\"text\"\n//           name=\"imageUrl\"\n//           value={studentData.imageUrl}\n//           onChange={handleChange}\n//           placeholder=\"Image URL\"\n//           className={classes.inputField}\n//         />\n//         {studentData.errors && studentData.errors.imageUrl && (\n//           <div className={classes.errorMessage}>\n//             {studentData.errors.imageUrl}\n//           </div>\n//         )}\n//         <Button\n//           type=\"submit\"\n//           variant=\"contained\"\n//           color=\"primary\"\n//           className={classes.submitButton}\n//         >\n//           Add Student\n//         </Button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default NewStudentView;\n\nconst NewStudentView = ({\n  handleChange,\n  handleSubmit,\n  studentData\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstname\",\n        children: \"First Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"firstname\",\n        name: \"firstname\",\n        value: studentData.firstname,\n        onChange: handleChange,\n        autoComplete: \"given-name\" // Use appropriate autocomplete value\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), studentData.errors.firstname && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: studentData.errors.firstname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastname\",\n        children: \"Last Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"lastname\",\n        name: \"lastname\",\n        value: studentData.lastname,\n        onChange: handleChange,\n        autoComplete: \"family-name\" // Use appropriate autocomplete value\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), studentData.errors.lastname && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: studentData.errors.lastname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: studentData.email,\n        onChange: handleChange,\n        autoComplete: \"email\" // Use appropriate autocomplete value\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), studentData.errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: studentData.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"gpa\",\n        children: \"GPA:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"gpa\",\n        name: \"gpa\",\n        value: studentData.gpa,\n        onChange: handleChange,\n        autoComplete: \"off\" // GPA may not have a specific autocomplete value\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), studentData.errors.gpa && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: studentData.errors.gpa\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageUrl\",\n        children: \"Image URL:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        id: \"imageUrl\",\n        name: \"imageUrl\",\n        value: studentData.imageUrl,\n        onChange: handleChange,\n        autoComplete: \"off\" // Image URL may not have a specific autocomplete value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"campusId\",\n        children: \"Campus ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"campusId\",\n        name: \"campusId\",\n        value: studentData.campusId,\n        onChange: handleChange,\n        autoComplete: \"off\" // Campus ID may not have a specific autocomplete value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_c = NewStudentView;\nexport default NewStudentView;\nvar _c;\n$RefreshReg$(_c, \"NewStudentView\");","map":{"version":3,"names":["React","Button","Typography","makeStyles","jsxDEV","_jsxDEV","useStyles","formContainer","width","backgroundColor","borderRadius","margin","padding","title","textAlign","fontFamily","fontSize","color","errorMessage","marginBottom","inputField","height","border","submitButton","cursor","NewStudentView","handleChange","handleSubmit","studentData","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","firstname","onChange","autoComplete","required","errors","lastname","email","gpa","imageUrl","campusId","_c","$RefreshReg$"],"sources":["/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/views/NewStudentView.js"],"sourcesContent":["// /*==================================================\n// NewStudentView.js\n\n// The Views component is responsible for rendering web page with data provided by the corresponding Container component.\n// It constructs a React component to display the new student page.\n// ================================================== */\n// import Button from '@material-ui/core/Button';\n// import Typography from '@material-ui/core/Typography';\n// import { makeStyles } from '@material-ui/core/styles';\n\n// // Create styling for the input form\n// const useStyles = makeStyles( () => ({\n//   formContainer:{  \n//     width: '500px',\n//     backgroundColor: '#f0f0f5',\n//     borderRadius: '5px',\n//     margin: 'auto',\n//   },\n//   title: {\n//     flexGrow: 1,\n//     textAlign: 'left',\n//     textDecoration: 'none'\n//   }, \n//   customizeAppBar:{\n//     backgroundColor: '#11153e',\n//     shadows: ['none'],\n//   },\n//   formTitle:{\n//     backgroundColor:'#c5c8d6',\n//     marginBottom: '15px',\n//     textAlign: 'center',\n//     borderRadius: '5px 5px 0px 0px',\n//     padding: '3px'\n//   },\n// }));\n\n// const NewStudentView = (props) => {\n//   const {handleChange, handleSubmit } = props;\n//   const classes = useStyles();\n\n//   // Render a New Student view with an input form\n//   return (\n//     <div>\n//       <h1>New Student</h1>\n\n//       <div className={classes.root}>\n//         <div className={classes.formContainer}>\n//           <div className={classes.formTitle}>\n//             <Typography style={{fontWeight: 'bold', fontFamily: 'Courier, sans-serif', fontSize: '20px', color: '#11153e'}}>\n//               Add a Student\n//             </Typography>\n//           </div>\n//           <form style={{textAlign: 'center'}} onSubmit={(e) => handleSubmit(e)}>\n//             <label style= {{color:'#11153e', fontWeight: 'bold'}}>First Name: </label>\n//             <input type=\"text\" name=\"firstname\" onChange ={(e) => handleChange(e)} />\n//             <br/>\n//             <br/>\n\n//             <label style={{color:'#11153e', fontWeight: 'bold'}}>Last Name: </label>\n//             <input type=\"text\" name=\"lastname\" onChange={(e) => handleChange(e)} />\n//             <br/>\n//             <br/>\n\n//             <label style={{color:'#11153e', fontWeight: 'bold'}}>Campus Id: </label>\n//             <input type=\"text\" name=\"campusId\" onChange={(e) => handleChange(e)} />\n//             <br/>\n//             <br/>\n\n//             <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n//               Submit\n//             </Button>\n//             <br/>\n//             <br/>\n//           </form>\n//           </div>\n//       </div>\n//     </div>    \n//   )\n// }\n\n// export default NewStudentView;\n\n\n\n/*==================================================\nNewStudentView.js\n\nThe Views component is responsible for rendering the web page with data provided by the corresponding Container component.\nIt constructs a React component to display the new student page.\n================================================== */\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// Create styling for the input form\nconst useStyles = makeStyles(() => ({\n  formContainer: {\n    width: '500px',\n    backgroundColor: '#f0f0f5',\n    borderRadius: '5px',\n    margin: 'auto',\n    padding: '20px',\n  },\n  title: {\n    textAlign: 'center',\n    fontFamily: 'Courier, sans-serif',\n    fontSize: '20px',\n    color: '#11153e',\n  },\n  errorMessage: {\n    color: 'red',\n    fontSize: '0.8em', // Corrected this line\n    marginBottom: '10px',\n  },\n  inputField: {\n    width: '100%',\n    height: '40px',\n    marginBottom: '20px',\n    padding: '10px',\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n  },\n  submitButton: {\n    width: '100%',\n    height: '40px',\n    backgroundColor: '#4CAF50',\n    color: '#fff',\n    padding: '10px',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer',\n  },\n}));\n\n// const NewStudentView = ({ handleChange, handleSubmit, studentData }) => {\n//   const classes = useStyles();\n\n//   return (\n//     <div className={classes.formContainer}>\n//       <Typography className={classes.title}>Add New Student</Typography>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           name=\"firstname\"\n//           value={studentData.firstname}\n//           onChange={handleChange}\n//           placeholder=\"First Name\"\n//           className={classes.inputField}\n//         />\n//         {studentData.errors && studentData.errors.firstname && (\n//           <div className={classes.errorMessage}>\n//             {studentData.errors.firstname}\n//           </div>\n//         )}\n//         <input\n//           type=\"text\"\n//           name=\"lastname\"\n//           value={studentData.lastname}\n//           onChange={handleChange}\n//           placeholder=\"Last Name\"\n//           className={classes.inputField}\n//         />\n//         {studentData.errors && studentData.errors.lastname && (\n//           <div className={classes.errorMessage}>\n//             {studentData.errors.lastname}\n//           </div>\n//         )}\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           value={studentData.email}\n//           onChange={handleChange}\n//           placeholder=\"Email\"\n//           className={classes.inputField}\n//         />\n//         {studentData.errors && studentData.errors.email && (\n//           <div className={classes.errorMessage}>\n//             {studentData.errors.email}\n//           </div>\n//         )}\n//         <input\n//           type=\"number\"\n//           name=\"gpa\"\n//           value={studentData.gpa}\n//           onChange={handleChange}\n//           placeholder=\"GPA\"\n//           className={classes.inputField}\n//         />\n//         {studentData.errors && studentData.errors.gpa && (\n//           <div className={classes.errorMessage}>\n//             {studentData.errors.gpa}\n//           </div>\n//         )}\n//         <input\n//           type=\"text\"\n//           name=\"campusId\"\n//           value={studentData.campusId}\n//           onChange={handleChange}\n//           placeholder=\"Campus ID\"\n//           className={classes.inputField}\n//         />\n//         {studentData.errors && studentData.errors.campusId && (\n//           <div className={classes.errorMessage}>\n//             {studentData.errors.campusId}\n//           </div>\n//         )}\n//         <input\n//           type=\"text\"\n//           name=\"imageUrl\"\n//           value={studentData.imageUrl}\n//           onChange={handleChange}\n//           placeholder=\"Image URL\"\n//           className={classes.inputField}\n//         />\n//         {studentData.errors && studentData.errors.imageUrl && (\n//           <div className={classes.errorMessage}>\n//             {studentData.errors.imageUrl}\n//           </div>\n//         )}\n//         <Button\n//           type=\"submit\"\n//           variant=\"contained\"\n//           color=\"primary\"\n//           className={classes.submitButton}\n//         >\n//           Add Student\n//         </Button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default NewStudentView;\n\nconst NewStudentView = ({ handleChange, handleSubmit, studentData }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"firstname\">First Name:</label>\n        <input\n          type=\"text\"\n          id=\"firstname\"\n          name=\"firstname\"\n          value={studentData.firstname}\n          onChange={handleChange}\n          autoComplete=\"given-name\" // Use appropriate autocomplete value\n          required\n        />\n        {studentData.errors.firstname && <span>{studentData.errors.firstname}</span>}\n      </div>\n\n      <div>\n        <label htmlFor=\"lastname\">Last Name:</label>\n        <input\n          type=\"text\"\n          id=\"lastname\"\n          name=\"lastname\"\n          value={studentData.lastname}\n          onChange={handleChange}\n          autoComplete=\"family-name\" // Use appropriate autocomplete value\n          required\n        />\n        {studentData.errors.lastname && <span>{studentData.errors.lastname}</span>}\n      </div>\n\n      <div>\n        <label htmlFor=\"email\">Email:</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          value={studentData.email}\n          onChange={handleChange}\n          autoComplete=\"email\" // Use appropriate autocomplete value\n          required\n        />\n        {studentData.errors.email && <span>{studentData.errors.email}</span>}\n      </div>\n\n      <div>\n        <label htmlFor=\"gpa\">GPA:</label>\n        <input\n          type=\"number\"\n          id=\"gpa\"\n          name=\"gpa\"\n          value={studentData.gpa}\n          onChange={handleChange}\n          autoComplete=\"off\" // GPA may not have a specific autocomplete value\n          required\n        />\n        {studentData.errors.gpa && <span>{studentData.errors.gpa}</span>}\n      </div>\n\n      <div>\n        <label htmlFor=\"imageUrl\">Image URL:</label>\n        <input\n          type=\"url\"\n          id=\"imageUrl\"\n          name=\"imageUrl\"\n          value={studentData.imageUrl}\n          onChange={handleChange}\n          autoComplete=\"off\" // Image URL may not have a specific autocomplete value\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"campusId\">Campus ID:</label>\n        <input\n          type=\"text\"\n          id=\"campusId\"\n          name=\"campusId\"\n          value={studentData.campusId}\n          onChange={handleChange}\n          autoComplete=\"off\" // Campus ID may not have a specific autocomplete value\n        />\n      </div>\n\n      <button type=\"submit\">Add Student</button>\n    </form>\n  );\n};\n\nexport default NewStudentView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
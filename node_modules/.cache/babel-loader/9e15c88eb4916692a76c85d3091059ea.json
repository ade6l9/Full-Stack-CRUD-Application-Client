{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const CampusView = (props) => {\n//   const { campus, removeStudentFromCampus, fetchCampus } = props;\n\n//   const [showAddStudentForm, setShowAddStudentForm] = useState(false);\n//   const [formData, setFormData] = useState({\n//     firstname: \"\",\n//     lastname: \"\",\n//     email: \"\",\n//     imageurl: \"\",\n//     gpa: \"\",\n//   });\n//   const [error, setError] = useState(\"\");\n//   const [success, setSuccess] = useState(\"\");\n\n//   // Handle removing a student with confirmation\n//   const handleRemoveStudent = async (studentId) => {\n//     const confirmation = window.confirm(\n//       \"Are you sure you want to remove this student?\"\n//     );\n//     if (confirmation) {\n//       await removeStudentFromCampus(studentId, campus.id); // Remove the student\n//       await fetchCampus(campus.id); // Re-fetch the updated campus data\n//     }\n//   };\n\n//   // Handle form input changes\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   // Handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n//     setSuccess(\"\");\n\n//     try {\n//       await axios.post(\"/api/students/add-to-campus\", {\n//         ...formData,\n//         campusId: campus.id,\n//       });\n\n//       setSuccess(\"Student added successfully!\");\n//       setFormData({\n//         firstname: \"\",\n//         lastname: \"\",\n//         email: \"\",\n//         imageurl: \"\",\n//         gpa: \"\",\n//       });\n//       setShowAddStudentForm(false); // Hide form after submission\n//       await fetchCampus(campus.id); // Refresh campus data\n//     } catch (error) {\n//       console.error(error);\n//       setError(\n//         error.response?.data?.error ||\n//           \"An error occurred while adding the student.\"\n//       );\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>{campus.name}</h1>\n//       <p>{campus.address}</p>\n//       <p>{campus.description}</p>\n//       <img\n//         src={campus.imageUrl || \"https://via.placeholder.com/150\"}\n//         alt={`${campus.name} campus`}\n//         style={{ width: \"300px\", height: \"auto\" }}\n//       />\n//       <br />\n\n//       <h2>Enrolled Students:</h2>\n//       {campus.students && campus.students.length > 0 ? (\n//         campus.students.map((student) => (\n//           <div key={student.id}>\n//             <Link to={`/student/${student.id}`}>\n//               <h3>{`${student.firstname} ${student.lastname}`}</h3>\n//             </Link>\n//             <button onClick={() => handleRemoveStudent(student.id)}>\n//               Remove Student\n//             </button>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No students are currently enrolled at this campus.</p>\n//       )}\n\n//       <br />\n\n//       <button onClick={() => setShowAddStudentForm(!showAddStudentForm)}>\n//         {showAddStudentForm\n//           ? \"Close Add Student Form\"\n//           : \"Add New Student to This Campus\"}\n//       </button>\n\n//       {showAddStudentForm && (\n//         <div>\n//           <h2>Add New Student</h2>\n//           {error && <p style={{ color: \"red\" }}>{error}</p>}\n//           {success && <p style={{ color: \"green\" }}>{success}</p>}\n//           <form onSubmit={handleSubmit}>\n//             <div>\n//               <label>First Name:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"firstname\"\n//                 value={formData.firstname}\n//                 onChange={handleChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Last Name:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"lastname\"\n//                 value={formData.lastname}\n//                 onChange={handleChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Email:</label>\n//               <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 value={formData.email}\n//                 onChange={handleChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Image URL:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"imageurl\"\n//                 value={formData.imageurl}\n//                 onChange={handleChange}\n//               />\n//             </div>\n//             <div>\n//               <label>GPA:</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"gpa\"\n//                 value={formData.gpa}\n//                 onChange={handleChange}\n//                 step=\"0.1\"\n//                 min=\"0.0\"\n//                 max=\"4.0\"\n//                 required\n//               />\n//             </div>\n//             <button type=\"submit\">Add Student</button>\n//           </form>\n//         </div>\n//       )}\n\n//       <br />\n//       <Link to={`/editcampus/${campus.id}`}>\n//         <button>Edit Campus</button>\n//       </Link>\n//       </div>\n//   );\n// };\n\n// export default CampusView;","map":{"version":3,"names":[],"sources":["/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/views/CampusView.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const CampusView = (props) => {\n//   const { campus, removeStudentFromCampus, fetchCampus } = props;\n\n//   const [showAddStudentForm, setShowAddStudentForm] = useState(false);\n//   const [formData, setFormData] = useState({\n//     firstname: \"\",\n//     lastname: \"\",\n//     email: \"\",\n//     imageurl: \"\",\n//     gpa: \"\",\n//   });\n//   const [error, setError] = useState(\"\");\n//   const [success, setSuccess] = useState(\"\");\n\n//   // Handle removing a student with confirmation\n//   const handleRemoveStudent = async (studentId) => {\n//     const confirmation = window.confirm(\n//       \"Are you sure you want to remove this student?\"\n//     );\n//     if (confirmation) {\n//       await removeStudentFromCampus(studentId, campus.id); // Remove the student\n//       await fetchCampus(campus.id); // Re-fetch the updated campus data\n//     }\n//   };\n\n//   // Handle form input changes\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   // Handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n//     setSuccess(\"\");\n\n//     try {\n//       await axios.post(\"/api/students/add-to-campus\", {\n//         ...formData,\n//         campusId: campus.id,\n//       });\n\n//       setSuccess(\"Student added successfully!\");\n//       setFormData({\n//         firstname: \"\",\n//         lastname: \"\",\n//         email: \"\",\n//         imageurl: \"\",\n//         gpa: \"\",\n//       });\n//       setShowAddStudentForm(false); // Hide form after submission\n//       await fetchCampus(campus.id); // Refresh campus data\n//     } catch (error) {\n//       console.error(error);\n//       setError(\n//         error.response?.data?.error ||\n//           \"An error occurred while adding the student.\"\n//       );\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>{campus.name}</h1>\n//       <p>{campus.address}</p>\n//       <p>{campus.description}</p>\n//       <img\n//         src={campus.imageUrl || \"https://via.placeholder.com/150\"}\n//         alt={`${campus.name} campus`}\n//         style={{ width: \"300px\", height: \"auto\" }}\n//       />\n//       <br />\n\n//       <h2>Enrolled Students:</h2>\n//       {campus.students && campus.students.length > 0 ? (\n//         campus.students.map((student) => (\n//           <div key={student.id}>\n//             <Link to={`/student/${student.id}`}>\n//               <h3>{`${student.firstname} ${student.lastname}`}</h3>\n//             </Link>\n//             <button onClick={() => handleRemoveStudent(student.id)}>\n//               Remove Student\n//             </button>\n//           </div>\n//         ))\n//       ) : (\n//         <p>No students are currently enrolled at this campus.</p>\n//       )}\n\n//       <br />\n\n//       <button onClick={() => setShowAddStudentForm(!showAddStudentForm)}>\n//         {showAddStudentForm\n//           ? \"Close Add Student Form\"\n//           : \"Add New Student to This Campus\"}\n//       </button>\n\n//       {showAddStudentForm && (\n//         <div>\n//           <h2>Add New Student</h2>\n//           {error && <p style={{ color: \"red\" }}>{error}</p>}\n//           {success && <p style={{ color: \"green\" }}>{success}</p>}\n//           <form onSubmit={handleSubmit}>\n//             <div>\n//               <label>First Name:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"firstname\"\n//                 value={formData.firstname}\n//                 onChange={handleChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Last Name:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"lastname\"\n//                 value={formData.lastname}\n//                 onChange={handleChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Email:</label>\n//               <input\n//                 type=\"email\"\n//                 name=\"email\"\n//                 value={formData.email}\n//                 onChange={handleChange}\n//                 required\n//               />\n//             </div>\n//             <div>\n//               <label>Image URL:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"imageurl\"\n//                 value={formData.imageurl}\n//                 onChange={handleChange}\n//               />\n//             </div>\n//             <div>\n//               <label>GPA:</label>\n//               <input\n//                 type=\"number\"\n//                 name=\"gpa\"\n//                 value={formData.gpa}\n//                 onChange={handleChange}\n//                 step=\"0.1\"\n//                 min=\"0.0\"\n//                 max=\"4.0\"\n//                 required\n//               />\n//             </div>\n//             <button type=\"submit\">Add Student</button>\n//           </form>\n//         </div>\n//       )}\n\n//       <br />\n//       <Link to={`/editcampus/${campus.id}`}>\n//         <button>Edit Campus</button>\n//       </Link>\n//       </div>\n//   );\n// };\n\n// export default CampusView;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}
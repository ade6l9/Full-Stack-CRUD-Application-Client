{"ast":null,"code":"// /*==================================================\n// CampusContainer.js\n\n// The Container component is responsible for stateful logic and data fetching, and\n// passes data (if any) as props to the corresponding View component.\n// If needed, it also defines the component's \"connect\" function.\n// ================================================== */\n// import Header from './Header';\n// import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// import { fetchCampusThunk } from \"../../store/thunks\";\n\n// import { CampusView } from \"../views\";\n\n// class CampusContainer extends Component {\n//   // Get the specific campus data from back-end database\n//   componentDidMount() {\n//     // Get campus ID from URL (API link)\n//     this.props.fetchCampus(this.props.match.params.id);\n//   }\n\n//   // Render a Campus view by passing campus data as props to the corresponding View component\n//   render() {\n//     return (\n//       <div>\n//         <Header />\n//         <CampusView campus={this.props.campus} />\n//       </div>\n//     );\n//   }\n// }\n\n// // The following 2 input arguments are passed to the \"connect\" function used by \"CampusContainer\" component to connect to Redux Store.\n// // 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// // The \"mapState\" is called when the Store State changes, and it returns a data object of \"campus\".\n// const mapState = (state) => {\n//   return {\n//     campus: state.campus,  // Get the State object from Reducer \"campus\"\n//   };\n// };\n// // 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// // The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\n// const mapDispatch = (dispatch) => {\n//   return {\n//     fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n//   };\n// };\n\n// // Export store-connected container by default\n// // CampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// // (and re-read the values when the Store State updates).\n// export default connect(mapState, mapDispatch)(CampusContainer);","map":{"version":3,"names":[],"sources":["/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/containers/CampusContainer.js"],"sourcesContent":["// /*==================================================\n// CampusContainer.js\n\n// The Container component is responsible for stateful logic and data fetching, and\n// passes data (if any) as props to the corresponding View component.\n// If needed, it also defines the component's \"connect\" function.\n// ================================================== */\n// import Header from './Header';\n// import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// import { fetchCampusThunk } from \"../../store/thunks\";\n\n// import { CampusView } from \"../views\";\n\n// class CampusContainer extends Component {\n//   // Get the specific campus data from back-end database\n//   componentDidMount() {\n//     // Get campus ID from URL (API link)\n//     this.props.fetchCampus(this.props.match.params.id);\n//   }\n\n//   // Render a Campus view by passing campus data as props to the corresponding View component\n//   render() {\n//     return (\n//       <div>\n//         <Header />\n//         <CampusView campus={this.props.campus} />\n//       </div>\n//     );\n//   }\n// }\n\n\n// // The following 2 input arguments are passed to the \"connect\" function used by \"CampusContainer\" component to connect to Redux Store.\n// // 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// // The \"mapState\" is called when the Store State changes, and it returns a data object of \"campus\".\n// const mapState = (state) => {\n//   return {\n//     campus: state.campus,  // Get the State object from Reducer \"campus\"\n//   };\n// };\n// // 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// // The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\n// const mapDispatch = (dispatch) => {\n//   return {\n//     fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n//   };\n// };\n\n// // Export store-connected container by default\n// // CampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// // (and re-read the values when the Store State updates).\n// export default connect(mapState, mapDispatch)(CampusContainer);\n\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module"}
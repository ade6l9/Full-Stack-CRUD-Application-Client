{"ast":null,"code":"var _jsxFileName = \"/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/containers/StudentContainer.js\",\n  _s = $RefreshSig$();\n// /*==================================================\n// StudentContainer.js\n\n// The Container component is responsible for stateful logic and data fetching, and\n// passes data (if any) as props to the corresponding View component.\n// If needed, it also defines the component's \"connect\" function.\n// ================================================== */\n\n// import Header from './Header';\n// import React, { useEffect } from 'react';\n// import { connect } from 'react-redux';\n// import { useParams, withRouter } from 'react-router-dom';\n// import StudentView from '../views/StudentView';\n// import { \n//   fetchStudentThunk, \n//   fetchCampusThunk,\n//   deleteStudentThunk \n// } from \"../../store/thunks\";\n\n// const StudentContainer = ({\n//   student, \n//   campus, \n//   fetchStudent, \n//   fetchCampus,\n//   deleteStudent,\n//   history\n// }) => {\n//   const { id } = useParams();\n\n//   // Debug to ensure id is correct\n//   console.log('StudentContainer: useParams id:', id);\n\n//   useEffect(() => {\n//     fetchStudent(id);\n//   }, [id, fetchStudent]);\n\n//   useEffect(() => {\n//     if (student?.campusId) {\n//       fetchCampus(student.campusId);\n//     }\n//   }, [student, fetchCampus]);\n\n//   console.log('StudentContainer: student prop:', student);\n//   console.log('StudentContainer: campus prop:', campus);\n\n//   if (!student) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       {/* Include the shared Header */}\n//       <Header />\n\n//       {/* Render the StudentView component */}\n//       <StudentView\n//         student={student}\n//         campus={campus}\n//         onDeleteStudent={(id) => {\n//           deleteStudent(id);\n//           history.push(\"/students\"); // Redirect to the students list\n//         }}\n//       />\n//     </div>\n//   );\n// };\n\n// const mapStateToProps = (state) => ({\n//   student: state.student || null, // Ensure reducer state is mapped correctly\n//   campus: state.campus?.selectedCampus || null, // Ensure reducer state is mapped correctly\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n//   fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n//   deleteStudent: (id) => dispatch(deleteStudentThunk(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(withRouter(StudentContainer));\n\nimport Header from './Header';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams, withRouter } from 'react-router-dom';\nimport StudentView from '../views/StudentView';\nimport { fetchStudentThunk, fetchCampusThunk, deleteStudentThunk } from \"../../store/thunks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentContainer = ({\n  student,\n  campus,\n  fetchStudent,\n  fetchCampus,\n  deleteStudent,\n  history\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n\n  // Debug to ensure id is correct\n  console.log('StudentContainer: useParams id:', id);\n  useEffect(() => {\n    fetchStudent(id); // Fetch student data based on ID from URL\n  }, [id, fetchStudent]);\n  useEffect(() => {\n    if (student !== null && student !== void 0 && student.campusId) {\n      fetchCampus(student.campusId); // Fetch campus data for the associated student\n    }\n  }, [student, fetchCampus]);\n  console.log('StudentContainer: student prop:', student);\n  console.log('StudentContainer: campus prop:', campus);\n  if (!student) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading student data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StudentView, {\n      student: student,\n      campus: campus,\n      onDeleteStudent: id => {\n        deleteStudent(id);\n        history.push(\"/students\"); // Redirect to the students list\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentContainer, \"NrwAnu+Xu8IMxwuWRtdZQJzKwrE=\", false, function () {\n  return [useParams];\n});\n_c = StudentContainer;\nconst mapStateToProps = state => {\n  var _state$campus;\n  return {\n    student: state.student || null,\n    // Ensure reducer state is mapped correctly\n    campus: ((_state$campus = state.campus) === null || _state$campus === void 0 ? void 0 : _state$campus.selectedCampus) || null // Ensure reducer state is mapped correctly\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  fetchStudent: id => dispatch(fetchStudentThunk(id))\n  //fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n  //deleteStudent: (id) => dispatch(deleteStudentThunk(id)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(StudentContainer));\nz;\nvar _c;\n$RefreshReg$(_c, \"StudentContainer\");","map":{"version":3,"names":["Header","React","useEffect","connect","useParams","withRouter","StudentView","fetchStudentThunk","fetchCampusThunk","deleteStudentThunk","jsxDEV","_jsxDEV","StudentContainer","student","campus","fetchStudent","fetchCampus","deleteStudent","history","_s","id","console","log","campusId","children","fileName","_jsxFileName","lineNumber","columnNumber","onDeleteStudent","push","_c","mapStateToProps","state","_state$campus","selectedCampus","mapDispatchToProps","dispatch","z","$RefreshReg$"],"sources":["/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/containers/StudentContainer.js"],"sourcesContent":["// /*==================================================\n// StudentContainer.js\n\n// The Container component is responsible for stateful logic and data fetching, and\n// passes data (if any) as props to the corresponding View component.\n// If needed, it also defines the component's \"connect\" function.\n// ================================================== */\n\n// import Header from './Header';\n// import React, { useEffect } from 'react';\n// import { connect } from 'react-redux';\n// import { useParams, withRouter } from 'react-router-dom';\n// import StudentView from '../views/StudentView';\n// import { \n//   fetchStudentThunk, \n//   fetchCampusThunk,\n//   deleteStudentThunk \n// } from \"../../store/thunks\";\n\n// const StudentContainer = ({\n//   student, \n//   campus, \n//   fetchStudent, \n//   fetchCampus,\n//   deleteStudent,\n//   history\n// }) => {\n//   const { id } = useParams();\n\n//   // Debug to ensure id is correct\n//   console.log('StudentContainer: useParams id:', id);\n\n//   useEffect(() => {\n//     fetchStudent(id);\n//   }, [id, fetchStudent]);\n\n//   useEffect(() => {\n//     if (student?.campusId) {\n//       fetchCampus(student.campusId);\n//     }\n//   }, [student, fetchCampus]);\n\n//   console.log('StudentContainer: student prop:', student);\n//   console.log('StudentContainer: campus prop:', campus);\n\n//   if (!student) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       {/* Include the shared Header */}\n//       <Header />\n\n//       {/* Render the StudentView component */}\n//       <StudentView\n//         student={student}\n//         campus={campus}\n//         onDeleteStudent={(id) => {\n//           deleteStudent(id);\n//           history.push(\"/students\"); // Redirect to the students list\n//         }}\n//       />\n//     </div>\n//   );\n// };\n\n// const mapStateToProps = (state) => ({\n//   student: state.student || null, // Ensure reducer state is mapped correctly\n//   campus: state.campus?.selectedCampus || null, // Ensure reducer state is mapped correctly\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n//   fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n//   deleteStudent: (id) => dispatch(deleteStudentThunk(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(withRouter(StudentContainer));\n\n\n\nimport Header from './Header';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams, withRouter } from 'react-router-dom';\nimport StudentView from '../views/StudentView';\nimport { \n  fetchStudentThunk, \n  fetchCampusThunk,\n  deleteStudentThunk \n} from \"../../store/thunks\";\n\nconst StudentContainer = ({\n  student, \n  campus, \n  fetchStudent, \n  fetchCampus,\n  deleteStudent,\n  history\n}) => {\n  const { id } = useParams();\n\n  // Debug to ensure id is correct\n  console.log('StudentContainer: useParams id:', id);\n\n  useEffect(() => {\n    fetchStudent(id); // Fetch student data based on ID from URL\n  }, [id, fetchStudent]);\n\n  useEffect(() => {\n    if (student?.campusId) {\n      fetchCampus(student.campusId); // Fetch campus data for the associated student\n    }\n  }, [student, fetchCampus]);\n\n  console.log('StudentContainer: student prop:', student);\n  console.log('StudentContainer: campus prop:', campus);\n\n  if (!student) {\n    return <div>Loading student data...</div>;\n  }\n\n  return (\n    <div>\n      {/* Include the shared Header */}\n      <Header />\n\n      {/* Render the StudentView component */}\n      <StudentView\n        student={student}\n        campus={campus}\n        onDeleteStudent={(id) => {\n          deleteStudent(id);\n          history.push(\"/students\"); // Redirect to the students list\n        }}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  student: state.student || null, // Ensure reducer state is mapped correctly\n  campus: state.campus?.selectedCampus || null, // Ensure reducer state is mapped correctly\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n  //fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\n  //deleteStudent: (id) => dispatch(deleteStudentThunk(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(StudentContainer));\nz"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
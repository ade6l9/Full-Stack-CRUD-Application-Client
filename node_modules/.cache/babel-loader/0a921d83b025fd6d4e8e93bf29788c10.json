{"ast":null,"code":"/*==================================================\nStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStudentThunk } from \"../../store/thunks\";\nimport { fetchCampusThunk } from \"../../store/thunks\";\nimport { StudentView } from \"../views\";\nimport { fetchCampus } from '../../store/actions/actionCreators';\n\n// class StudentContainer extends Component {\n//   // Get student data from back-end database\n//   componentDidMount() {\n//     //getting student ID from url\n//     this.props.fetchStudent(this.props.match.params.id);\n//   }\n\n//   // Render Student view by passing student data as props to the corresponding View component\n//   render() {\n//     return (\n//       <div>\n//         <Header />\n//         <StudentView student={this.props.student} />\n//       </div>\n//     );\n//   }\n// }\n\n// // The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \n// // The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\n// const mapState = (state) => {\n//   return {\n//     student: state.student,  // Get the State object from Reducer \"student\"\n//     campus: state.campuses.find(campus => campus.id === state.student.campusId), // Get the campus data\n\n//   };\n// };\n// // 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// // The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\n// const mapDispatch = (dispatch) => {\n//   return {\n//     fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n//     fetchCampus:(id)  => dispatch(fetchCampusThunk(id)),\n//   };\n// };\n\n// // Export store-connected container by default\n// // StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// // (and re-read the values when the Store State updates).\n// export default connect(mapState, mapDispatch)(StudentContainer);","map":{"version":3,"names":["Header","React","Component","connect","fetchStudentThunk","fetchCampusThunk","StudentView","fetchCampus"],"sources":["/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/containers/StudentContainer.js"],"sourcesContent":["/*==================================================\nStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchStudentThunk } from \"../../store/thunks\";\nimport { fetchCampusThunk } from \"../../store/thunks\";\nimport { StudentView } from \"../views\";\nimport { fetchCampus } from '../../store/actions/actionCreators';\n\n// class StudentContainer extends Component {\n//   // Get student data from back-end database\n//   componentDidMount() {\n//     //getting student ID from url\n//     this.props.fetchStudent(this.props.match.params.id);\n//   }\n\n//   // Render Student view by passing student data as props to the corresponding View component\n//   render() {\n//     return (\n//       <div>\n//         <Header />\n//         <StudentView student={this.props.student} />\n//       </div>\n//     );\n//   }\n// }\n\n// // The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \n// // The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\n// const mapState = (state) => {\n//   return {\n//     student: state.student,  // Get the State object from Reducer \"student\"\n//     campus: state.campuses.find(campus => campus.id === state.student.campusId), // Get the campus data\n\n//   };\n// };\n// // 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// // The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\n// const mapDispatch = (dispatch) => {\n//   return {\n//     fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n//     fetchCampus:(id)  => dispatch(fetchCampusThunk(id)),\n//   };\n// };\n\n// // Export store-connected container by default\n// // StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// // (and re-read the values when the Store State updates).\n// export default connect(mapState, mapDispatch)(StudentContainer);"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,iBAAiB,QAAQ,oBAAoB;AACtD,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,WAAW,QAAQ,UAAU;AACtC,SAASC,WAAW,QAAQ,oCAAoC;;AAEhE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module"}
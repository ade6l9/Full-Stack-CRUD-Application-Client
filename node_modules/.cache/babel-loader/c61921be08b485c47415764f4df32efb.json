{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { useParams, useHistory } from \"react-router-dom\";\n\n// const EditCampusView = ({ fetchCampus, updateCampus, campus }) => {\n//   const { id } = useParams(); // Get campus ID from the route\n//   const history = useHistory();\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     address: \"\",\n//     description: \"\",\n//     imageUrl: \"\",\n//   });\n\n//   // Fetch the campus data when the component mounts\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       await fetchCampus(id);\n//     };\n//     fetchData();\n//   }, [id, fetchCampus]);\n\n//   // Update form data when the campus data is fetched\n//   useEffect(() => {\n//     if (campus) {\n//       setFormData({\n//         name: campus.name || \"\",\n//         address: campus.address || \"\",\n//         description: campus.description || \"\",\n//         imageUrl: campus.imageUrl || \"\",\n//       });\n//     }\n//   }, [campus]);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     await updateCampus(id, formData); // Call the updateCampus thunk\n//     history.push(`/campus/${id}`); // Navigate back to the Campus View\n//   };\n\n//   return (\n//     <div>\n//       <h1>Edit Campus</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Name:\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             value={formData.name}\n//             onChange={handleChange}\n//             required\n//           />\n//         </label>\n//         <br />\n//         <label>\n//           Address:\n//           <input\n//             type=\"text\"\n//             name=\"address\"\n//             value={formData.address}\n//             onChange={handleChange}\n//             required\n//           />\n//         </label>\n//         <br />\n//         <label>\n//           Description:\n//           <textarea\n//             name=\"description\"\n//             value={formData.description}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <br />\n//         <label>\n//           Image URL:\n//           <input\n//             type=\"text\"\n//             name=\"imageUrl\"\n//             value={formData.imageUrl}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Save Changes</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default EditCampusView;","map":{"version":3,"names":[],"sources":["/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/views/EditCampusView.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useParams, useHistory } from \"react-router-dom\";\n\n// const EditCampusView = ({ fetchCampus, updateCampus, campus }) => {\n//   const { id } = useParams(); // Get campus ID from the route\n//   const history = useHistory();\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     address: \"\",\n//     description: \"\",\n//     imageUrl: \"\",\n//   });\n\n//   // Fetch the campus data when the component mounts\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       await fetchCampus(id);\n//     };\n//     fetchData();\n//   }, [id, fetchCampus]);\n\n//   // Update form data when the campus data is fetched\n//   useEffect(() => {\n//     if (campus) {\n//       setFormData({\n//         name: campus.name || \"\",\n//         address: campus.address || \"\",\n//         description: campus.description || \"\",\n//         imageUrl: campus.imageUrl || \"\",\n//       });\n//     }\n//   }, [campus]);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     await updateCampus(id, formData); // Call the updateCampus thunk\n//     history.push(`/campus/${id}`); // Navigate back to the Campus View\n//   };\n\n//   return (\n//     <div>\n//       <h1>Edit Campus</h1>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Name:\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             value={formData.name}\n//             onChange={handleChange}\n//             required\n//           />\n//         </label>\n//         <br />\n//         <label>\n//           Address:\n//           <input\n//             type=\"text\"\n//             name=\"address\"\n//             value={formData.address}\n//             onChange={handleChange}\n//             required\n//           />\n//         </label>\n//         <br />\n//         <label>\n//           Description:\n//           <textarea\n//             name=\"description\"\n//             value={formData.description}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <br />\n//         <label>\n//           Image URL:\n//           <input\n//             type=\"text\"\n//             name=\"imageUrl\"\n//             value={formData.imageUrl}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Save Changes</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default EditCampusView;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}
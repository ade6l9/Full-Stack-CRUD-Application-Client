{"ast":null,"code":"var _jsxFileName = \"/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/containers/AddCampusContainer.js\",\n  _s = $RefreshSig$();\n// ==================================================\n// AddCampusContainer.js\n//\n// This file serves as the container for adding a new campus.\n// It manages the state for the Add Campus form and handles\n// dispatching the action to add a new campus to the Redux store.\n// Includes navigation to the \"All Campuses\" page upon successful submission.\n// ==================================================\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addCampusThunk } from \"../../store/thunks\";\nimport AddCampusView from \"../views/AddCampusView\";\nimport Header from \"../views/Header\"; // Include Header\nimport { useNavigate } from \"react-router-dom\"; // For navigation (React Router v6+)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AddCampusContainer extends Component {\n  constructor() {\n    super();\n    // Handle changes in form fields\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n    // Handle form submission\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      console.log(\"Submitting Campus Data:\", this.state); // Log state\n      await this.props.addCampus(this.state); // Dispatch action to add campus\n      this.props.navigate(\"/campuses\"); // Redirect to All Campuses\n    };\n    this.state = {\n      name: \"\",\n      address: \"\",\n      description: \"\",\n      imageUrl: \"\"\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(AddCampusView, {\n        handleSubmit: this.handleSubmit,\n        handleChange: this.handleChange,\n        name: this.state.name,\n        address: this.state.address,\n        description: this.state.description,\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// Wrapping the component with the `useNavigate` hook for navigation\nconst AddCampusContainerWithNavigate = props => {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(AddCampusContainer, {\n    ...props,\n    navigate: navigate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n};\n_s(AddCampusContainerWithNavigate, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = AddCampusContainerWithNavigate;\nconst mapDispatchToProps = dispatch => ({\n  addCampus: campus => dispatch(addCampusThunk(campus))\n});\n\n// Export the component wrapped with Redux connect\nexport default connect(null, mapDispatchToProps)(AddCampusContainerWithNavigate);\nvar _c;\n$RefreshReg$(_c, \"AddCampusContainerWithNavigate\");","map":{"version":3,"names":["React","Component","connect","addCampusThunk","AddCampusView","Header","useNavigate","jsxDEV","_jsxDEV","AddCampusContainer","constructor","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","console","log","state","props","addCampus","navigate","address","description","imageUrl","render","children","fileName","_jsxFileName","lineNumber","columnNumber","AddCampusContainerWithNavigate","_s","_c","mapDispatchToProps","dispatch","campus","$RefreshReg$"],"sources":["/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/containers/AddCampusContainer.js"],"sourcesContent":["// ==================================================\n// AddCampusContainer.js\n//\n// This file serves as the container for adding a new campus.\n// It manages the state for the Add Campus form and handles\n// dispatching the action to add a new campus to the Redux store.\n// Includes navigation to the \"All Campuses\" page upon successful submission.\n// ==================================================\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addCampusThunk } from \"../../store/thunks\";\nimport AddCampusView from \"../views/AddCampusView\";\nimport Header from \"../views/Header\"; // Include Header\nimport { useNavigate } from \"react-router-dom\"; // For navigation (React Router v6+)\n\nclass AddCampusContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      address: \"\",\n      description: \"\",\n      imageUrl: \"\",\n    };\n  }\n\n  // Handle changes in form fields\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  // Handle form submission\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"Submitting Campus Data:\", this.state); // Log state\n    await this.props.addCampus(this.state); // Dispatch action to add campus\n    this.props.navigate(\"/campuses\"); // Redirect to All Campuses\n  };\n\n  render() {\n    return (\n      <div>\n        <Header /> {/* Add Header component */}\n        <AddCampusView\n          handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n          name={this.state.name}\n          address={this.state.address}\n          description={this.state.description}\n          imageUrl={this.state.imageUrl}\n        />\n      </div>\n    );\n  }\n}\n\n// Wrapping the component with the `useNavigate` hook for navigation\nconst AddCampusContainerWithNavigate = (props) => {\n  const navigate = useNavigate();\n  return <AddCampusContainer {...props} navigate={navigate} />;\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addCampus: (campus) => dispatch(addCampusThunk(campus)),\n});\n\n// Export the component wrapped with Redux connect\nexport default connect(null, mapDispatchToProps)(AddCampusContainerWithNavigate);\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,cAAc,QAAQ,oBAAoB;AACnD,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,MAAM,MAAM,iBAAiB,CAAC,CAAC;AACtC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,kBAAkB,SAASR,SAAS,CAAC;EACzCS,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAST;IAAA,KACAC,YAAY,GAAIC,CAAC,IAAK;MACpB,IAAI,CAACC,QAAQ,CAAC;QAAE,CAACD,CAAC,CAACE,MAAM,CAACC,IAAI,GAAGH,CAAC,CAACE,MAAM,CAACE;MAAM,CAAC,CAAC;IACpD,CAAC;IAED;IAAA,KACAC,YAAY,GAAG,MAAOL,CAAC,IAAK;MAC1BA,CAAC,CAACM,cAAc,CAAC,CAAC;MAClBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;MACpD,MAAM,IAAI,CAACC,KAAK,CAACC,SAAS,CAAC,IAAI,CAACF,KAAK,CAAC,CAAC,CAAC;MACxC,IAAI,CAACC,KAAK,CAACE,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACpC,CAAC;IAnBC,IAAI,CAACH,KAAK,GAAG;MACXN,IAAI,EAAE,EAAE;MACRU,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE;IACZ,CAAC;EACH;EAeAC,MAAMA,CAAA,EAAG;IACP,oBACEpB,OAAA;MAAAqB,QAAA,gBACErB,OAAA,CAACH,MAAM;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC,eACXzB,OAAA,CAACJ,aAAa;QACZa,YAAY,EAAE,IAAI,CAACA,YAAa;QAChCN,YAAY,EAAE,IAAI,CAACA,YAAa;QAChCI,IAAI,EAAE,IAAI,CAACM,KAAK,CAACN,IAAK;QACtBU,OAAO,EAAE,IAAI,CAACJ,KAAK,CAACI,OAAQ;QAC5BC,WAAW,EAAE,IAAI,CAACL,KAAK,CAACK,WAAY;QACpCC,QAAQ,EAAE,IAAI,CAACN,KAAK,CAACM;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;;AAEA;AACA,MAAMC,8BAA8B,GAAIZ,KAAK,IAAK;EAAAa,EAAA;EAChD,MAAMX,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAC9B,oBAAOE,OAAA,CAACC,kBAAkB;IAAA,GAAKa,KAAK;IAAEE,QAAQ,EAAEA;EAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9D,CAAC;AAACE,EAAA,CAHID,8BAA8B;EAAA,QACjB5B,WAAW;AAAA;AAAA8B,EAAA,GADxBF,8BAA8B;AAKpC,MAAMG,kBAAkB,GAAIC,QAAQ,KAAM;EACxCf,SAAS,EAAGgB,MAAM,IAAKD,QAAQ,CAACnC,cAAc,CAACoC,MAAM,CAAC;AACxD,CAAC,CAAC;;AAEF;AACA,eAAerC,OAAO,CAAC,IAAI,EAAEmC,kBAAkB,CAAC,CAACH,8BAA8B,CAAC;AAAC,IAAAE,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}
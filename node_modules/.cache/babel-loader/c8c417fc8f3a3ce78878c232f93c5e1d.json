{"ast":null,"code":"var _jsxFileName = \"/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/containers/StudentContainer.js\";\n/*==================================================\nStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\n// import Header from './Header';\n// import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// import { fetchStudentThunk } from \"../../store/thunks\";\n// import { fetchCampusThunk } from \"../../store/thunks\";\n// import { StudentView } from \"../views\";\n// import { fetchCampus } from '../../store/actions/actionCreators';\n\n// class StudentContainer extends Component {\n//   // Get student data from back-end database\n//   componentDidMount() {\n//     //getting student ID from url\n//     this.props.fetchStudent(this.props.match.params.id);\n//   }\n\n//   // Render Student view by passing student data as props to the corresponding View component\n//   render() {\n//     return (\n//       <div>\n//         <Header />\n//         <StudentView student={this.props.student} />\n//       </div>\n//     );\n//   }\n// }\n\n// // The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \n// // The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\n// const mapState = (state) => {\n//   return {\n//     student: state.student,  // Get the State object from Reducer \"student\"\n//     campus: state.campuses.find(campus => campus.id === state.student.campusId), // Get the campus data\n\n//   };\n// };\n// // 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// // The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\n// const mapDispatch = (dispatch) => {\n//   return {\n//     fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n//     fetchCampus:(id)  => dispatch(fetchCampusThunk(id)),\n//   };\n// };\n\n// // Export store-connected container by default\n// // StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// // (and re-read the values when the Store State updates).\n// export default connect(mapState, mapDispatch)(StudentContainer);\n\nimport React, { Component } from \"react\";\nimport Header from \"./Header\"; // Adjust the import path\nimport StudentView from \"./StudentView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass StudentContainer extends Component {\n  // Fetch the specific student data from the back-end database\n  componentDidMount() {\n    // Get student ID from URL (API link)\n    const studentId = this.props.match.params.id;\n    this.props.fetchStudent(studentId);\n\n    // Optionally fetch the associated campus data\n    if (this.props.student && this.props.student.campusId) {\n      this.props.fetchCampus(this.props.student.campusId);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StudentView, {\n        student: this.props.student,\n        campus: this.props.campus,\n        deleteStudent: this.props.deleteStudent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default StudentContainer;","map":{"version":3,"names":["React","Component","Header","StudentView","jsxDEV","_jsxDEV","StudentContainer","componentDidMount","studentId","props","match","params","id","fetchStudent","student","campusId","fetchCampus","render","children","fileName","_jsxFileName","lineNumber","columnNumber","campus","deleteStudent"],"sources":["/Users/adelinadautovic/Full-Stack-CRUD-Application-Client/src/components/containers/StudentContainer.js"],"sourcesContent":["/*==================================================\nStudentContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\n// import Header from './Header';\n// import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// import { fetchStudentThunk } from \"../../store/thunks\";\n// import { fetchCampusThunk } from \"../../store/thunks\";\n// import { StudentView } from \"../views\";\n// import { fetchCampus } from '../../store/actions/actionCreators';\n\n// class StudentContainer extends Component {\n//   // Get student data from back-end database\n//   componentDidMount() {\n//     //getting student ID from url\n//     this.props.fetchStudent(this.props.match.params.id);\n//   }\n\n//   // Render Student view by passing student data as props to the corresponding View component\n//   render() {\n//     return (\n//       <div>\n//         <Header />\n//         <StudentView student={this.props.student} />\n//       </div>\n//     );\n//   }\n// }\n\n// // The following 2 input arguments are passed to the \"connect\" function used by \"StudentContainer\" to connect to Redux Store.  \n// // The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\n// const mapState = (state) => {\n//   return {\n//     student: state.student,  // Get the State object from Reducer \"student\"\n//     campus: state.campuses.find(campus => campus.id === state.student.campusId), // Get the campus data\n\n//   };\n// };\n// // 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// // The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\n// const mapDispatch = (dispatch) => {\n//   return {\n//     fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\n//     fetchCampus:(id)  => dispatch(fetchCampusThunk(id)),\n//   };\n// };\n\n// // Export store-connected container by default\n// // StudentContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// // (and re-read the values when the Store State updates).\n// export default connect(mapState, mapDispatch)(StudentContainer);\n\n\n\n\n\n\n\nimport React, { Component } from \"react\";\nimport Header from \"./Header\"; // Adjust the import path\nimport StudentView from \"./StudentView\";\n\nclass StudentContainer extends Component {\n  // Fetch the specific student data from the back-end database\n  componentDidMount() {\n    // Get student ID from URL (API link)\n    const studentId = this.props.match.params.id;\n    this.props.fetchStudent(studentId);\n\n    // Optionally fetch the associated campus data\n    if (this.props.student && this.props.student.campusId) {\n      this.props.fetchCampus(this.props.student.campusId);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Include the shared Header */}\n        <Header />\n        {/* Render the StudentView component */}\n        <StudentView\n          student={this.props.student}\n          campus={this.props.campus}\n          deleteStudent={this.props.deleteStudent}\n        />\n      </div>\n    );\n  }\n}\n\nexport default StudentContainer;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAQA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,UAAU,CAAC,CAAC;AAC/B,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,SAASL,SAAS,CAAC;EACvC;EACAM,iBAAiBA,CAAA,EAAG;IAClB;IACA,MAAMC,SAAS,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,MAAM,CAACC,EAAE;IAC5C,IAAI,CAACH,KAAK,CAACI,YAAY,CAACL,SAAS,CAAC;;IAElC;IACA,IAAI,IAAI,CAACC,KAAK,CAACK,OAAO,IAAI,IAAI,CAACL,KAAK,CAACK,OAAO,CAACC,QAAQ,EAAE;MACrD,IAAI,CAACN,KAAK,CAACO,WAAW,CAAC,IAAI,CAACP,KAAK,CAACK,OAAO,CAACC,QAAQ,CAAC;IACrD;EACF;EAEAE,MAAMA,CAAA,EAAG;IACP,oBACEZ,OAAA;MAAAa,QAAA,gBAEEb,OAAA,CAACH,MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEVjB,OAAA,CAACF,WAAW;QACVW,OAAO,EAAE,IAAI,CAACL,KAAK,CAACK,OAAQ;QAC5BS,MAAM,EAAE,IAAI,CAACd,KAAK,CAACc,MAAO;QAC1BC,aAAa,EAAE,IAAI,CAACf,KAAK,CAACe;MAAc;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AAEA,eAAehB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module"}